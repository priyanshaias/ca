{"version":3,"file":"static/js/276.33465d0b.chunk.js","mappings":"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","sources":["components/UI/NotesEditor.tsx","components/UI/ArticleDetailModal.tsx","pages/HomePage.tsx","components/ArticleCard/ArticleCard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\n\ninterface Note {\n  id: string;\n  content: string;\n  timestamp: Date;\n  lastEdited: Date;\n  characterCount: number;\n  version: number;\n}\n\ninterface NotesEditorProps {\n  articleId: string;\n  initialNotes?: Note[];\n  onNotesChange?: (notes: Note[]) => void;\n  className?: string;\n}\n\ninterface EditorState {\n  content: string;\n  selectionStart: number;\n  selectionEnd: number;\n}\n\nconst NotesEditor: React.FC<NotesEditorProps> = ({\n  articleId,\n  initialNotes = [],\n  onNotesChange,\n  className = ''\n}) => {\n  const [notes, setNotes] = useState<Note[]>(initialNotes);\n  const [currentNote, setCurrentNote] = useState<Note | null>(null);\n  const [autoSaveStatus, setAutoSaveStatus] = useState<'saved' | 'saving' | 'error'>('saved');\n  const [lastEditTime, setLastEditTime] = useState<Date | null>(null);\n  const [showFormatting, setShowFormatting] = useState(false);\n  const [fontSize, setFontSize] = useState(14);\n  const [textColor, setTextColor] = useState('#000000');\n\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const autoSaveTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const undoStackRef = useRef<EditorState[]>([]);\n  const redoStackRef = useRef<EditorState[]>([]);\n\n  // Load notes from localStorage on mount\n  useEffect(() => {\n    const savedNotes = localStorage.getItem(`article-notes-${articleId}`);\n    if (savedNotes) {\n      try {\n        const parsedNotes = JSON.parse(savedNotes);\n        setNotes(parsedNotes);\n        if (parsedNotes.length > 0) {\n          setCurrentNote(parsedNotes[0]);\n        }\n      } catch (error) {\n        console.error('Error loading notes:', error);\n      }\n    }\n  }, [articleId]);\n\n  // Save notes to localStorage\n  const saveNotes = useCallback(async () => {\n    try {\n      setAutoSaveStatus('saving');\n      localStorage.setItem(`article-notes-${articleId}`, JSON.stringify(notes));\n      setAutoSaveStatus('saved');\n      onNotesChange?.(notes);\n    } catch (error) {\n      console.error('Error saving notes:', error);\n      setAutoSaveStatus('error');\n    }\n  }, [notes, articleId, onNotesChange]);\n\n  // Auto-save effect\n  useEffect(() => {\n    if (autoSaveTimeoutRef.current) {\n      clearTimeout(autoSaveTimeoutRef.current);\n    }\n    \n    if (notes.length > 0) {\n      autoSaveTimeoutRef.current = setTimeout(() => {\n        saveNotes();\n      }, 30000); // 30 seconds\n    }\n\n    return () => {\n      if (autoSaveTimeoutRef.current) {\n        clearTimeout(autoSaveTimeoutRef.current);\n      }\n    };\n  }, [notes, saveNotes]);\n\n  // Create new note\n  const createNewNote = useCallback(() => {\n    const newNote: Note = {\n      id: Date.now().toString(),\n      content: '',\n      timestamp: new Date(),\n      lastEdited: new Date(),\n      characterCount: 0,\n      version: 1\n    };\n    \n    setNotes(prev => [newNote, ...prev]);\n    setCurrentNote(newNote);\n    setLastEditTime(new Date());\n  }, []);\n\n  // Update current note\n  const updateCurrentNote = useCallback((content: string) => {\n    if (!currentNote) return;\n\n    // Save current state to undo stack\n    if (textareaRef.current) {\n      const currentState: EditorState = {\n        content: currentNote.content,\n        selectionStart: textareaRef.current.selectionStart,\n        selectionEnd: textareaRef.current.selectionEnd\n      };\n      undoStackRef.current.push(currentState);\n      redoStackRef.current = []; // Clear redo stack on new edit\n    }\n\n    const updatedNote: Note = {\n      ...currentNote,\n      content,\n      lastEdited: new Date(),\n      characterCount: content.length,\n      version: currentNote.version + 1\n    };\n\n    setCurrentNote(updatedNote);\n    setNotes(prev => prev.map(note => \n      note.id === currentNote.id ? updatedNote : note\n    ));\n    setLastEditTime(new Date());\n  }, [currentNote]);\n\n  // Delete note\n  const deleteNote = useCallback((noteId: string) => {\n    setNotes(prev => prev.filter(note => note.id !== noteId));\n    if (currentNote?.id === noteId) {\n      setCurrentNote(notes.find(note => note.id !== noteId) || null);\n    }\n  }, [currentNote, notes]);\n\n  // Undo functionality\n  const undo = useCallback(() => {\n    if (undoStackRef.current.length === 0 || !textareaRef.current) return;\n\n    const previousState = undoStackRef.current.pop()!;\n    redoStackRef.current.push({\n      content: currentNote?.content || '',\n      selectionStart: textareaRef.current.selectionStart,\n      selectionEnd: textareaRef.current.selectionEnd\n    });\n\n    updateCurrentNote(previousState.content);\n    \n    // Restore cursor position\n    setTimeout(() => {\n      if (textareaRef.current) {\n        textareaRef.current.setSelectionRange(\n          previousState.selectionStart,\n          previousState.selectionEnd\n        );\n      }\n    }, 0);\n  }, [currentNote, updateCurrentNote]);\n\n  // Redo functionality\n  const redo = useCallback(() => {\n    if (redoStackRef.current.length === 0 || !textareaRef.current) return;\n\n    const nextState = redoStackRef.current.pop()!;\n    undoStackRef.current.push({\n      content: currentNote?.content || '',\n      selectionStart: textareaRef.current.selectionStart,\n      selectionEnd: textareaRef.current.selectionEnd\n    });\n\n    updateCurrentNote(nextState.content);\n    \n    // Restore cursor position\n    setTimeout(() => {\n      if (textareaRef.current) {\n        textareaRef.current.setSelectionRange(\n          nextState.selectionStart,\n          nextState.selectionEnd\n        );\n      }\n    }, 0);\n  }, [currentNote, updateCurrentNote]);\n\n  // Formatting functions\n  const applyFormatting = useCallback((format: string) => {\n    if (!textareaRef.current || !currentNote) return;\n\n    const textarea = textareaRef.current;\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const selectedText = textarea.value.substring(start, end);\n\n    let formattedText = '';\n    switch (format) {\n      case 'bold':\n        formattedText = `**${selectedText}**`;\n        break;\n      case 'italic':\n        formattedText = `*${selectedText}*`;\n        break;\n      case 'underline':\n        formattedText = `__${selectedText}__`;\n        break;\n      case 'bullet':\n        formattedText = `• ${selectedText}`;\n        break;\n      case 'number':\n        formattedText = `1. ${selectedText}`;\n        break;\n      case 'highlight':\n        formattedText = `==${selectedText}==`;\n        break;\n      default:\n        return;\n    }\n\n    const newContent = \n      textarea.value.substring(0, start) + \n      formattedText + \n      textarea.value.substring(end);\n\n    updateCurrentNote(newContent);\n    \n    // Restore cursor position\n    setTimeout(() => {\n      if (textareaRef.current) {\n        textareaRef.current.setSelectionRange(\n          start + formattedText.length,\n          start + formattedText.length\n        );\n      }\n    }, 0);\n  }, [currentNote, updateCurrentNote]);\n\n  // Export notes\n  const exportNotes = useCallback(() => {\n    const notesText = notes.map(note => \n      `Note ${note.id}\\n${note.content}\\n\\nLast edited: ${note.lastEdited.toLocaleString()}\\n---\\n`\n    ).join('\\n');\n    \n    const blob = new Blob([notesText], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `notes-${articleId}.txt`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }, [notes, articleId]);\n\n  // Import notes\n  const importNotes = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const content = e.target?.result as string;\n      const newNote: Note = {\n        id: Date.now().toString(),\n        content,\n        timestamp: new Date(),\n        lastEdited: new Date(),\n        characterCount: content.length,\n        version: 1\n      };\n      \n      setNotes(prev => [newNote, ...prev]);\n      setCurrentNote(newNote);\n    };\n    reader.readAsText(file);\n  }, []);\n\n  // Manual save\n  const handleManualSave = useCallback(() => {\n    saveNotes();\n  }, [saveNotes]);\n\n  return (\n    <div className={`bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center space-x-3\">\n          <svg className=\"w-5 h-5 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n          </svg>\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Notes Editor</h3>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {/* Auto-save status */}\n          <div className=\"flex items-center space-x-1 text-xs\">\n            <div className={`w-2 h-2 rounded-full ${\n              autoSaveStatus === 'saved' ? 'bg-green-500' :\n              autoSaveStatus === 'saving' ? 'bg-yellow-500' : 'bg-red-500'\n            }`}></div>\n            <span className=\"text-gray-500 dark:text-gray-400\">\n              {autoSaveStatus === 'saved' ? 'Saved' :\n               autoSaveStatus === 'saving' ? 'Saving...' : 'Error'}\n            </span>\n          </div>\n          \n          {/* Manual save button */}\n          <button\n            onClick={handleManualSave}\n            className=\"px-3 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors duration-200\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n\n      {/* Notes List */}\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Notes ({notes.length})</h4>\n          <button\n            onClick={createNewNote}\n            className=\"px-3 py-1 text-xs bg-green-600 text-white rounded hover:bg-green-700 transition-colors duration-200\"\n          >\n            + New Note\n          </button>\n        </div>\n        \n        <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n          {notes.map((note) => (\n            <div\n              key={note.id}\n              className={`flex items-center justify-between p-2 rounded cursor-pointer transition-colors duration-200 ${\n                currentNote?.id === note.id\n                  ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300'\n                  : 'hover:bg-gray-100 dark:hover:bg-gray-700'\n              }`}\n              onClick={() => {\n                setCurrentNote(note);\n              }}\n            >\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"text-sm font-medium truncate\">\n                  {note.content.substring(0, 50) || 'Empty note'}...\n                </div>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {note.lastEdited.toLocaleString()}\n                </div>\n              </div>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  deleteNote(note.id);\n                }}\n                className=\"ml-2 p-1 text-gray-400 hover:text-red-500 transition-colors duration-200\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Editor */}\n      {currentNote && (\n        <div className=\"p-4\">\n          {/* Formatting Toolbar */}\n          <div className=\"mb-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={() => setShowFormatting(!showFormatting)}\n                  className=\"px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200\"\n                >\n                  {showFormatting ? 'Hide' : 'Show'} Formatting\n                </button>\n                \n                {/* Undo/Redo */}\n                <button\n                  onClick={undo}\n                  disabled={undoStackRef.current.length === 0}\n                  className=\"px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  Undo\n                </button>\n                <button\n                  onClick={redo}\n                  disabled={redoStackRef.current.length === 0}\n                  className=\"px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  Redo\n                </button>\n              </div>\n              \n              {/* Export/Import */}\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={exportNotes}\n                  className=\"px-2 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors duration-200\"\n                >\n                  Export\n                </button>\n                <label className=\"px-2 py-1 text-xs bg-green-600 text-white rounded hover:bg-green-700 transition-colors duration-200 cursor-pointer\">\n                  Import\n                  <input\n                    type=\"file\"\n                    accept=\".txt,.md\"\n                    onChange={importNotes}\n                    className=\"hidden\"\n                  />\n                </label>\n              </div>\n            </div>\n            \n            {/* Formatting Options */}\n            {showFormatting && (\n              <div className=\"flex items-center space-x-2 p-2 bg-gray-50 dark:bg-gray-700 rounded\">\n                <button\n                  onClick={() => applyFormatting('bold')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200 font-bold\"\n                >\n                  B\n                </button>\n                <button\n                  onClick={() => applyFormatting('italic')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200 italic\"\n                >\n                  I\n                </button>\n                <button\n                  onClick={() => applyFormatting('underline')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200 underline\"\n                >\n                  U\n                </button>\n                <button\n                  onClick={() => applyFormatting('bullet')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200\"\n                >\n                  •\n                </button>\n                <button\n                  onClick={() => applyFormatting('number')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200\"\n                >\n                  1.\n                </button>\n                <button\n                  onClick={() => applyFormatting('highlight')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200\"\n                >\n                  Highlight\n                </button>\n                \n                {/* Font Size */}\n                <select\n                  value={fontSize}\n                  onChange={(e) => setFontSize(Number(e.target.value))}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded border-0\"\n                >\n                  <option value={12}>12px</option>\n                  <option value={14}>14px</option>\n                  <option value={16}>16px</option>\n                  <option value={18}>18px</option>\n                  <option value={20}>20px</option>\n                </select>\n                \n                {/* Text Color */}\n                <input\n                  type=\"color\"\n                  value={textColor}\n                  onChange={(e) => setTextColor(e.target.value)}\n                  className=\"w-8 h-6 rounded border-0 cursor-pointer\"\n                />\n              </div>\n            )}\n          </div>\n\n          {/* Text Editor */}\n          <div className=\"mb-4\">\n            <textarea\n              ref={textareaRef}\n              value={currentNote.content}\n              onChange={(e) => updateCurrentNote(e.target.value)}\n              placeholder=\"Start typing your notes here...\"\n              className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 resize-none\"\n              rows={8}\n              style={{\n                fontSize: `${fontSize}px`,\n                color: textColor\n              }}\n            />\n          </div>\n\n          {/* Editor Stats */}\n          <div className=\"flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\n            <div className=\"flex items-center space-x-4\">\n              <span>Characters: {currentNote.characterCount}</span>\n              <span>Words: {currentNote.content.split(/\\s+/).filter(word => word.length > 0).length}</span>\n              <span>Version: {currentNote.version}</span>\n            </div>\n            <div>\n              {lastEditTime && (\n                <span>Last edited: {lastEditTime.toLocaleTimeString()}</span>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Empty State */}\n      {!currentNote && notes.length === 0 && (\n        <div className=\"p-8 text-center\">\n          <svg className=\"w-12 h-12 text-gray-300 dark:text-gray-600 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n          </svg>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">No notes yet</p>\n          <button\n            onClick={createNewNote}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\"\n          >\n            Create Your First Note\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NotesEditor; ","import React, { useState, useEffect, useRef } from 'react';\nimport { format } from 'date-fns';\nimport { NewsArticle } from '../../types';\nimport NotesEditor from './NotesEditor';\n\ninterface ArticleDetailModalProps {\n  article: NewsArticle;\n  isOpen: boolean;\n  onClose: () => void;\n  onNavigate: (direction: 'prev' | 'next') => void;\n  hasPrev: boolean;\n  hasNext: boolean;\n}\n\nconst ArticleDetailModal: React.FC<ArticleDetailModalProps> = ({\n  article,\n  isOpen,\n  onClose,\n  onNavigate,\n  hasPrev,\n  hasNext\n}) => {\n  const [showNotes, setShowNotes] = useState(false);\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  // Handle ESC key to close modal\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, onClose]);\n\n  // Handle navigation keys\n  useEffect(() => {\n    const handleNavigation = (event: KeyboardEvent) => {\n      if (!isOpen) return;\n      \n      if (event.key === 'ArrowLeft' && hasPrev) {\n        onNavigate('prev');\n      } else if (event.key === 'ArrowRight' && hasNext) {\n        onNavigate('next');\n      }\n    };\n\n    document.addEventListener('keydown', handleNavigation);\n    return () => document.removeEventListener('keydown', handleNavigation);\n  }, [isOpen, hasPrev, hasNext, onNavigate]);\n\n  if (!isOpen) return null;\n\n  const calculateReadTime = (text: string): number => {\n    const words = text.split(' ').length;\n    const readTime = Math.ceil(words / 200);\n    return Math.max(1, readTime);\n  };\n\n  const readTime = calculateReadTime(article.content.detailed);\n\n  const getTopicColor = (topic: string) => {\n    const colors = {\n      'Economy': 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300',\n      'Science & Tech': 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300',\n      'National': 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300',\n      'International': 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300',\n      'Environment': 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/30 dark:text-emerald-300',\n    };\n    return colors[topic as keyof typeof colors] || 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300';\n  };\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(window.location.href);\n      // You could add a toast notification here\n    } catch (err) {\n      console.error('Failed to copy: ', err);\n    }\n  };\n\n  const printArticle = () => {\n    const printWindow = window.open('', '_blank');\n    if (printWindow) {\n      printWindow.document.write(`\n        <html>\n          <head>\n            <title>${article.title}</title>\n            <style>\n              body { font-family: Arial, sans-serif; line-height: 1.6; margin: 20px; }\n              h1 { color: #333; border-bottom: 2px solid #333; padding-bottom: 10px; }\n              .meta { color: #666; margin-bottom: 20px; }\n              .content { text-align: justify; }\n              .tags { margin-top: 20px; }\n              .tag { background: #f0f0f0; padding: 2px 8px; margin-right: 5px; border-radius: 3px; }\n            </style>\n          </head>\n          <body>\n            <h1>${article.title}</h1>\n            <div class=\"meta\">\n              <strong>Date:</strong> ${format(article.date, 'MMMM dd, yyyy')}<br>\n              <strong>Topic:</strong> ${article.topic} - ${article.subTopic}<br>\n              <strong>Source:</strong> ${article.source}<br>\n              <strong>Read Time:</strong> ${readTime} minutes\n            </div>\n            <div class=\"content\">\n              ${article.content.detailed}\n            </div>\n            <div class=\"tags\">\n              ${article.tags.map(tag => `<span class=\"tag\">#${tag}</span>`).join('')}\n            </div>\n          </body>\n        </html>\n      `);\n      printWindow.document.close();\n      printWindow.print();\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-y-auto\">\n      {/* Backdrop */}\n      <div \n        className=\"fixed inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={onClose}\n      />\n\n      {/* Modal */}\n      <div className=\"flex min-h-full items-center justify-center p-4\">\n        <div \n          ref={modalRef}\n          className=\"relative bg-white dark:bg-gray-900 rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-hidden\"\n          onClick={(e) => e.stopPropagation()}\n        >\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center space-x-4\">\n              <span className={`px-3 py-1 text-sm font-medium rounded-full ${getTopicColor(article.topic)}`}>\n                {article.topic}\n              </span>\n              <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                {format(article.date, 'MMM dd, yyyy')}\n              </span>\n            </div>\n            \n            <div className=\"flex items-center space-x-2\">\n              {/* Notes Toggle */}\n              <button\n                onClick={() => setShowNotes(!showNotes)}\n                className={`p-2 rounded-md transition-colors duration-200 ${\n                  showNotes \n                    ? 'bg-yellow-100 text-yellow-700 dark:bg-yellow-900/30 dark:text-yellow-300' \n                    : 'text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800'\n                }`}\n                title=\"Toggle Notes\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                </svg>\n              </button>\n\n              {/* Share Button */}\n              <button\n                onClick={copyToClipboard}\n                className=\"p-2 text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-colors duration-200\"\n                title=\"Copy Link\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\n                </svg>\n              </button>\n\n              {/* Print Button */}\n              <button\n                onClick={printArticle}\n                className=\"p-2 text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-colors duration-200\"\n                title=\"Print Article\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z\" />\n                </svg>\n              </button>\n\n              {/* Close Button */}\n              <button\n                onClick={onClose}\n                className=\"p-2 text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-colors duration-200\"\n                title=\"Close\"\n              >\n                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          {/* Content */}\n          <div className=\"flex h-[calc(90vh-120px)]\">\n            {/* Article Content */}\n            <div className={`${showNotes ? 'w-2/3' : 'w-full'} p-6 overflow-y-auto`}>\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-4\">\n                {article.title}\n              </h1>\n              \n              <div className=\"flex items-center space-x-4 mb-6 text-sm text-gray-500 dark:text-gray-400\">\n                <span className=\"flex items-center\">\n                  <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                  {readTime} min read\n                </span>\n                <span>Source: {article.source}</span>\n                <span>Importance: {article.importance}/5</span>\n              </div>\n\n              <div className=\"prose prose-lg dark:prose-invert max-w-none\">\n                <p className=\"text-gray-700 dark:text-gray-300 leading-relaxed\">\n                  {article.content.detailed}\n                </p>\n              </div>\n\n              {/* Tags */}\n              <div className=\"mt-8 pt-6 border-t border-gray-200 dark:border-gray-700\">\n                <h3 className=\"text-sm font-medium text-gray-900 dark:text-white mb-3\">Tags:</h3>\n                <div className=\"flex flex-wrap gap-2\">\n                  {article.tags.map((tag) => (\n                    <span\n                      key={tag}\n                      className=\"px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 text-sm rounded-full hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200\"\n                    >\n                      #{tag}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Notes Panel */}\n            {showNotes && (\n              <div className=\"w-1/3 border-l border-gray-200 dark:border-gray-700\">\n                <NotesEditor articleId={article.id} />\n              </div>\n            )}\n          </div>\n\n          {/* Navigation Footer */}\n          <div className=\"flex items-center justify-between p-4 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-800\">\n            <button\n              onClick={() => onNavigate('prev')}\n              disabled={!hasPrev}\n              className={`flex items-center space-x-2 px-4 py-2 rounded-md transition-colors duration-200 ${\n                hasPrev\n                  ? 'bg-blue-600 text-white hover:bg-blue-700'\n                  : 'bg-gray-300 text-gray-500 cursor-not-allowed dark:bg-gray-600 dark:text-gray-400'\n              }`}\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n              </svg>\n              <span>Previous</span>\n            </button>\n\n            <div className=\"text-sm text-gray-500 dark:text-gray-400\">\n              Use arrow keys to navigate\n            </div>\n\n            <button\n              onClick={() => onNavigate('next')}\n              disabled={!hasNext}\n              className={`flex items-center space-x-2 px-4 py-2 rounded-md transition-colors duration-200 ${\n                hasNext\n                  ? 'bg-blue-600 text-white hover:bg-blue-700'\n                  : 'bg-gray-300 text-gray-500 cursor-not-allowed dark:bg-gray-600 dark:text-gray-400'\n              }`}\n            >\n              <span>Next</span>\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ArticleDetailModal; ","import React, { useState } from 'react';\nimport { NewsArticle } from '../types';\nimport { useNews } from '../contexts/NewsContext';\nimport { useViewMode } from '../contexts/ViewModeContext';\nimport ArticleCard from '../components/ArticleCard/ArticleCard';\nimport ArticleDetailModal from '../components/UI/ArticleDetailModal';\n\nconst HomePage: React.FC = () => {\n  const { articles, filteredArticles } = useNews();\n  const { layoutMode } = useViewMode();\n  const [selectedArticle, setSelectedArticle] = useState<NewsArticle | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedArticleIndex, setSelectedArticleIndex] = useState<number | null>(null);\n\n  // Use filtered articles for display\n  const displayArticles = filteredArticles.length > 0 ? filteredArticles : articles;\n\n  const handleArticleClick = (article: NewsArticle) => {\n    setSelectedArticle(article);\n    setIsModalOpen(true);\n    const index = displayArticles.findIndex(a => a.id === article.id);\n    setSelectedArticleIndex(index);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedArticle(null);\n    setSelectedArticleIndex(null);\n  };\n\n  const handleNavigate = (direction: 'prev' | 'next') => {\n    if (selectedArticleIndex === null) return;\n\n    let newIndex: number;\n    if (direction === 'prev') {\n      newIndex = Math.max(0, selectedArticleIndex - 1);\n    } else {\n      newIndex = Math.min(displayArticles.length - 1, selectedArticleIndex + 1);\n    }\n\n    setSelectedArticleIndex(newIndex);\n    setSelectedArticle(displayArticles[newIndex]);\n  };\n\n  const hasPrevious = selectedArticleIndex !== null && selectedArticleIndex > 0;\n  const hasNext = selectedArticleIndex !== null && selectedArticleIndex < displayArticles.length - 1;\n\n  // Get layout-specific container classes\n  const getContainerClasses = () => {\n    switch (layoutMode) {\n      case 'list':\n        return 'space-y-0 divide-y divide-gray-200 dark:divide-gray-700';\n      case 'table':\n        return 'space-y-0 divide-y divide-gray-200 dark:divide-gray-700';\n      default: // card\n        return 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6';\n    }\n  };\n\n  // Get layout-specific wrapper classes\n  const getWrapperClasses = () => {\n    switch (layoutMode) {\n      case 'list':\n        return 'bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden';\n      case 'table':\n        return 'bg-white dark:bg-gray-900 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden';\n      default: // card\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n            Current Affairs\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            Stay updated with the latest news and developments\n          </p>\n        </div>\n\n        {/* Articles Grid/List/Table */}\n        <div className={getWrapperClasses()}>\n          <div className={getContainerClasses()}>\n            {displayArticles.map((article) => (\n              <ArticleCard\n                key={article.id}\n                article={article}\n                layout={layoutMode}\n                hasNotes={false} // You can implement notes checking logic here\n                onClick={handleArticleClick}\n              />\n            ))}\n          </div>\n        </div>\n\n        {/* Empty State */}\n        {displayArticles.length === 0 && (\n          <div className=\"text-center py-12\">\n            <svg\n              className=\"mx-auto h-12 w-12 text-gray-400\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n              />\n            </svg>\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-white\">No articles</h3>\n            <p className=\"mt-1 text-sm text-gray-500 dark:text-gray-400\">\n              Get started by adding some articles.\n            </p>\n          </div>\n        )}\n\n        {/* Article Detail Modal */}\n        {selectedArticle && (\n          <ArticleDetailModal\n            article={selectedArticle}\n            isOpen={isModalOpen}\n            onClose={handleCloseModal}\n            onNavigate={handleNavigate}\n            hasPrev={hasPrevious}\n            hasNext={hasNext}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage; ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { NewsArticle } from '../../types';\nimport { useViewMode, LayoutMode } from '../../contexts/ViewModeContext';\n\ninterface ArticleCardProps {\n  article: NewsArticle;\n  hasNotes?: boolean;\n  layout?: LayoutMode;\n  onClick?: (article: NewsArticle) => void;\n}\n\nconst ArticleCard: React.FC<ArticleCardProps> = ({ article, hasNotes = false, layout = 'card', onClick }) => {\n  const { viewMode } = useViewMode();\n\n  // Calculate read time (average reading speed: 200 words per minute)\n  const calculateReadTime = (text: string): number => {\n    const words = text.split(' ').length;\n    const readTime = Math.ceil(words / 200);\n    return Math.max(1, readTime); // Minimum 1 minute\n  };\n\n  // Get content based on view mode\n  const getContentForViewMode = () => {\n    switch (viewMode) {\n      case 'detailed':\n        return article.content.detailed;\n      case 'prelims':\n        return article.content.prelims;\n      case 'mains':\n        return article.content.mains;\n      case 'one-liner':\n        return article.content.oneLiner;\n      default:\n        return article.content.detailed;\n    }\n  };\n\n  // Get topic badge color\n  const getTopicColor = (topic: string) => {\n    const colors = {\n      'Economy': 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300 border-green-200 dark:border-green-700',\n      'Science & Tech': 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300 border-blue-200 dark:border-blue-700',\n      'National': 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300 border-red-200 dark:border-red-700',\n      'International': 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300 border-purple-200 dark:border-purple-700',\n      'Environment': 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/30 dark:text-emerald-300 border-emerald-200 dark:border-emerald-700',\n    };\n    return colors[topic as keyof typeof colors] || 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300 border-gray-200 dark:border-gray-700';\n  };\n\n  // Get sub-topic badge color (lighter version of topic color)\n  const getSubTopicColor = (topic: string) => {\n    const colors = {\n      'Economy': 'bg-green-50 text-green-700 dark:bg-green-900/20 dark:text-green-400 border-green-100 dark:border-green-600',\n      'Science & Tech': 'bg-blue-50 text-blue-700 dark:bg-blue-900/20 dark:text-blue-400 border-blue-100 dark:border-blue-600',\n      'National': 'bg-red-50 text-red-700 dark:bg-red-900/20 dark:text-red-400 border-red-100 dark:border-red-600',\n      'International': 'bg-purple-50 text-purple-700 dark:bg-purple-900/20 dark:text-purple-400 border-purple-100 dark:border-purple-600',\n      'Environment': 'bg-emerald-50 text-emerald-700 dark:bg-emerald-900/20 dark:text-emerald-400 border-emerald-100 dark:border-emerald-600',\n    };\n    return colors[topic as keyof typeof colors] || 'bg-gray-50 text-gray-700 dark:bg-gray-900/20 dark:text-gray-400 border-gray-100 dark:border-gray-600';\n  };\n\n  // Star rating component\n  const StarRating: React.FC<{ rating: number }> = ({ rating }) => {\n    return (\n      <div className=\"flex items-center space-x-1\">\n        {[1, 2, 3, 4, 5].map((star) => (\n          <svg\n            key={star}\n            className={`w-4 h-4 ${\n              star <= rating\n                ? 'text-yellow-400 fill-current'\n                : 'text-gray-300 dark:text-gray-600'\n            }`}\n            viewBox=\"0 0 20 20\"\n          >\n            <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n          </svg>\n        ))}\n        <span className=\"text-xs text-gray-500 dark:text-gray-400 ml-1\">\n          {rating}/5\n        </span>\n      </div>\n    );\n  };\n\n  // Truncate title if too long\n  const truncateTitle = (title: string, maxLength: number = 80) => {\n    if (title.length <= maxLength) return title;\n    return title.substring(0, maxLength) + '...';\n  };\n\n  // Truncate preview text\n  const truncatePreview = (text: string, maxLength: number = 100) => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n\n  const currentContent = getContentForViewMode();\n  const readTime = calculateReadTime(currentContent);\n\n  // Handle click\n  const handleClick = (e: React.MouseEvent) => {\n    if (onClick) {\n      e.preventDefault();\n      onClick(article);\n    }\n  };\n\n  // List View Layout\n  if (layout === 'list') {\n    const CardContent = () => (\n      <div className=\"group bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200\">\n        <div className=\"p-4\">\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center space-x-2 mb-2\">\n                <span className={`px-2 py-1 text-xs font-medium rounded-full border ${getTopicColor(article.topic)}`}>\n                  {article.topic}\n                </span>\n                <span className={`px-2 py-1 text-xs font-medium rounded-full border ${getSubTopicColor(article.topic)}`}>\n                  {article.subTopic}\n                </span>\n                <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {format(article.date, 'MMM dd, yyyy')}\n                </span>\n              </div>\n              \n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200 line-clamp-1\">\n                {truncateTitle(article.title, 120)}\n              </h3>\n              \n              <p className=\"text-gray-600 dark:text-gray-300 text-sm line-clamp-2 leading-relaxed\">\n                {truncatePreview(currentContent, 150)}\n              </p>\n            </div>\n            \n            <div className=\"flex flex-col items-end space-y-2 ml-4\">\n              <StarRating rating={article.importance} />\n              <div className=\"flex items-center space-x-2 text-xs text-gray-500 dark:text-gray-400\">\n                <span>{readTime} min</span>\n                {hasNotes && (\n                  <svg className=\"w-4 h-4 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                  </svg>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    if (onClick) {\n      return (\n        <button onClick={handleClick} className=\"w-full text-left\">\n          <CardContent />\n        </button>\n      );\n    }\n\n    return (\n      <Link to={`/article/${article.id}`}>\n        <CardContent />\n      </Link>\n    );\n  }\n\n  // Table View Layout\n  if (layout === 'table') {\n    const CardContent = () => (\n      <div className=\"group bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors duration-200\">\n        <div className=\"p-3\">\n          <div className=\"grid grid-cols-12 gap-4 items-center\">\n            <div className=\"col-span-4\">\n              <h3 className=\"text-sm font-medium text-gray-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200 line-clamp-1\">\n                {truncateTitle(article.title, 60)}\n              </h3>\n            </div>\n            \n            <div className=\"col-span-2\">\n              <span className={`px-2 py-1 text-xs font-medium rounded-full border ${getTopicColor(article.topic)}`}>\n                {article.topic}\n              </span>\n            </div>\n            \n            <div className=\"col-span-2\">\n              <span className=\"text-xs text-gray-600 dark:text-gray-400\">\n                {format(article.date, 'MMM dd')}\n              </span>\n            </div>\n            \n            <div className=\"col-span-2\">\n              <StarRating rating={article.importance} />\n            </div>\n            \n            <div className=\"col-span-1\">\n              <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                {readTime}m\n              </span>\n            </div>\n            \n            <div className=\"col-span-1 flex justify-end\">\n              {hasNotes && (\n                <svg className=\"w-4 h-4 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                </svg>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    if (onClick) {\n      return (\n        <button onClick={handleClick} className=\"w-full text-left\">\n          <CardContent />\n        </button>\n      );\n    }\n\n    return (\n      <Link to={`/article/${article.id}`}>\n        <CardContent />\n      </Link>\n    );\n  }\n\n  // Default Card View Layout\n  const CardContent = () => (\n    <div className=\"group bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-lg hover:border-blue-300 dark:hover:border-blue-600 transition-all duration-300 transform hover:-translate-y-1\">\n      <div className=\"p-6\">\n        {/* Header with topic badges and importance */}\n        <div className=\"flex items-start justify-between mb-4\">\n          <div className=\"flex flex-wrap gap-2\">\n            <span className={`px-3 py-1 text-xs font-medium rounded-full border ${getTopicColor(article.topic)}`}>\n              {article.topic}\n            </span>\n            <span className={`px-2 py-1 text-xs font-medium rounded-full border ${getSubTopicColor(article.topic)}`}>\n              {article.subTopic}\n            </span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <StarRating rating={article.importance} />\n            {hasNotes && (\n              <div className=\"relative group/notes\">\n                <svg className=\"w-5 h-5 text-yellow-500 hover:text-yellow-600 transition-colors duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                </svg>\n                <div className=\"absolute -top-1 -right-1 w-2 h-2 bg-yellow-500 rounded-full\"></div>\n                \n                {/* Tooltip */}\n                <div className=\"absolute right-0 top-8 w-48 bg-gray-900 text-white text-xs rounded-lg py-2 px-3 opacity-0 group-hover/notes:opacity-100 transition-opacity duration-200 pointer-events-none z-10\">\n                  <div className=\"flex items-center space-x-2\">\n                    <svg className=\"w-4 h-4 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                    </svg>\n                    <span>Has notes - Click to view</span>\n                  </div>\n                  <div className=\"absolute -top-1 right-2 w-2 h-2 bg-gray-900 transform rotate-45\"></div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Article Title */}\n        <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200 line-clamp-2\">\n          {truncateTitle(article.title)}\n        </h3>\n\n        {/* Preview Text - Show only content for current view mode */}\n        <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-3 leading-relaxed\">\n          {truncatePreview(currentContent)}\n        </p>\n\n        {/* Footer with metadata */}\n        <div className=\"flex items-center justify-between text-sm text-gray-500 dark:text-gray-400\">\n          <div className=\"flex items-center space-x-4\">\n            <span className=\"flex items-center\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n              </svg>\n              {format(article.date, 'MMM dd, yyyy')}\n            </span>\n            <span className=\"flex items-center\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              {readTime} min read\n            </span>\n          </div>\n          <span className=\"text-xs font-medium text-gray-400 dark:text-gray-500\">\n            {article.source}\n          </span>\n        </div>\n\n        {/* Tags - Only show in detailed mode */}\n        {viewMode === 'detailed' && (\n          <div className=\"mt-4 flex flex-wrap gap-1\">\n            {article.tags.slice(0, 3).map((tag) => (\n              <span\n                key={tag}\n                className=\"px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 text-xs rounded-md hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200\"\n              >\n                #{tag}\n              </span>\n            ))}\n            {article.tags.length > 3 && (\n              <span className=\"px-2 py-1 text-gray-400 dark:text-gray-500 text-xs\">\n                +{article.tags.length - 3} more\n              </span>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Hover indicator */}\n      <div className=\"h-1 bg-gradient-to-r from-blue-500 to-purple-500 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300\"></div>\n    </div>\n  );\n\n  if (onClick) {\n    return (\n      <button onClick={handleClick} className=\"w-full text-left\">\n        <CardContent />\n      </button>\n    );\n  }\n\n  return (\n    <Link to={`/article/${article.id}`}>\n      <CardContent />\n    </Link>\n  );\n};\n\nexport default ArticleCard; "],"names":["_ref","articleId","initialNotes","onNotesChange","className","notes","setNotes","useState","currentNote","setCurrentNote","autoSaveStatus","setAutoSaveStatus","lastEditTime","setLastEditTime","showFormatting","setShowFormatting","fontSize","setFontSize","textColor","setTextColor","textareaRef","useRef","autoSaveTimeoutRef","undoStackRef","redoStackRef","useEffect","savedNotes","localStorage","getItem","concat","parsedNotes","JSON","parse","length","error","console","saveNotes","useCallback","async","setItem","stringify","current","clearTimeout","setTimeout","createNewNote","newNote","id","Date","now","toString","content","timestamp","lastEdited","characterCount","version","prev","updateCurrentNote","currentState","selectionStart","selectionEnd","push","updatedNote","_objectSpread","map","note","deleteNote","noteId","filter","find","undo","previousState","pop","setSelectionRange","redo","nextState","applyFormatting","format","textarea","start","end","selectedText","value","substring","formattedText","newContent","exportNotes","notesText","toLocaleString","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","importNotes","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","result","readAsText","handleManualSave","_jsxs","children","_jsx","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","stopPropagation","disabled","accept","onChange","Number","ref","placeholder","rows","style","color","split","word","toLocaleTimeString","article","isOpen","onClose","onNavigate","hasPrev","hasNext","showNotes","setShowNotes","modalRef","handleEscape","key","addEventListener","body","overflow","removeEventListener","handleNavigation","readTime","text","words","Math","ceil","max","calculateReadTime","detailed","topic","date","title","navigator","clipboard","writeText","window","location","err","printArticle","printWindow","open","write","subTopic","source","tags","tag","close","print","importance","NotesEditor","HomePage","articles","filteredArticles","useNews","layoutMode","useViewMode","selectedArticle","setSelectedArticle","isModalOpen","setIsModalOpen","selectedArticleIndex","setSelectedArticleIndex","displayArticles","handleArticleClick","index","findIndex","hasPrevious","getWrapperClasses","getContainerClasses","ArticleCard","layout","hasNotes","ArticleDetailModal","handleCloseModal","direction","newIndex","min","viewMode","getTopicColor","getSubTopicColor","StarRating","_ref2","rating","star","truncateTitle","maxLength","arguments","undefined","truncatePreview","currentContent","getContentForViewMode","prelims","mains","oneLiner","handleClick","preventDefault","CardContent","Link","to","slice"],"sourceRoot":""}