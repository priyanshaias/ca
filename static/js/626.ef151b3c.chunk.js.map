{"version":3,"file":"static/js/626.ef151b3c.chunk.js","mappings":"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","sources":["components/ArticleCard/ArticleCard.tsx","pages/TopicsPage.tsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { NewsArticle } from '../../types';\n\ninterface ArticleCardProps {\n  article: NewsArticle;\n  hasNotes?: boolean;\n}\n\nconst ArticleCard: React.FC<ArticleCardProps> = ({ article, hasNotes = false }) => {\n  // Calculate read time (average reading speed: 200 words per minute)\n  const calculateReadTime = (text: string): number => {\n    const words = text.split(' ').length;\n    const readTime = Math.ceil(words / 200);\n    return Math.max(1, readTime); // Minimum 1 minute\n  };\n\n  // Get topic badge color\n  const getTopicColor = (topic: string) => {\n    const colors = {\n      'Economy': 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300 border-green-200 dark:border-green-700',\n      'Science & Tech': 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300 border-blue-200 dark:border-blue-700',\n      'National': 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300 border-red-200 dark:border-red-700',\n      'International': 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300 border-purple-200 dark:border-purple-700',\n      'Environment': 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/30 dark:text-emerald-300 border-emerald-200 dark:border-emerald-700',\n    };\n    return colors[topic as keyof typeof colors] || 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300 border-gray-200 dark:border-gray-700';\n  };\n\n  // Get sub-topic badge color (lighter version of topic color)\n  const getSubTopicColor = (topic: string) => {\n    const colors = {\n      'Economy': 'bg-green-50 text-green-700 dark:bg-green-900/20 dark:text-green-400 border-green-100 dark:border-green-600',\n      'Science & Tech': 'bg-blue-50 text-blue-700 dark:bg-blue-900/20 dark:text-blue-400 border-blue-100 dark:border-blue-600',\n      'National': 'bg-red-50 text-red-700 dark:bg-red-900/20 dark:text-red-400 border-red-100 dark:border-red-600',\n      'International': 'bg-purple-50 text-purple-700 dark:bg-purple-900/20 dark:text-purple-400 border-purple-100 dark:border-purple-600',\n      'Environment': 'bg-emerald-50 text-emerald-700 dark:bg-emerald-900/20 dark:text-emerald-400 border-emerald-100 dark:border-emerald-600',\n    };\n    return colors[topic as keyof typeof colors] || 'bg-gray-50 text-gray-700 dark:bg-gray-900/20 dark:text-gray-400 border-gray-100 dark:border-gray-600';\n  };\n\n  // Star rating component\n  const StarRating: React.FC<{ rating: number }> = ({ rating }) => {\n    return (\n      <div className=\"flex items-center space-x-1\">\n        {[1, 2, 3, 4, 5].map((star) => (\n          <svg\n            key={star}\n            className={`w-4 h-4 ${\n              star <= rating\n                ? 'text-yellow-400 fill-current'\n                : 'text-gray-300 dark:text-gray-600'\n            }`}\n            viewBox=\"0 0 20 20\"\n          >\n            <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n          </svg>\n        ))}\n        <span className=\"text-xs text-gray-500 dark:text-gray-400 ml-1\">\n          {rating}/5\n        </span>\n      </div>\n    );\n  };\n\n  // Truncate title if too long\n  const truncateTitle = (title: string, maxLength: number = 80) => {\n    if (title.length <= maxLength) return title;\n    return title.substring(0, maxLength) + '...';\n  };\n\n  // Truncate preview text\n  const truncatePreview = (text: string, maxLength: number = 100) => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n\n  const readTime = calculateReadTime(article.content.detailed);\n\n  return (\n    <Link to={`/article/${article.id}`}>\n      <div className=\"group bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-lg hover:border-blue-300 dark:hover:border-blue-600 transition-all duration-300 transform hover:-translate-y-1\">\n        <div className=\"p-6\">\n          {/* Header with topic badges and importance */}\n          <div className=\"flex items-start justify-between mb-4\">\n            <div className=\"flex flex-wrap gap-2\">\n              <span className={`px-3 py-1 text-xs font-medium rounded-full border ${getTopicColor(article.topic)}`}>\n                {article.topic}\n              </span>\n              <span className={`px-2 py-1 text-xs font-medium rounded-full border ${getSubTopicColor(article.topic)}`}>\n                {article.subTopic}\n              </span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <StarRating rating={article.importance} />\n              {hasNotes && (\n                <div className=\"relative group/notes\">\n                  <svg className=\"w-5 h-5 text-yellow-500 hover:text-yellow-600 transition-colors duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                  </svg>\n                  <div className=\"absolute -top-1 -right-1 w-2 h-2 bg-yellow-500 rounded-full\"></div>\n                  \n                  {/* Tooltip */}\n                  <div className=\"absolute right-0 top-8 w-48 bg-gray-900 text-white text-xs rounded-lg py-2 px-3 opacity-0 group-hover/notes:opacity-100 transition-opacity duration-200 pointer-events-none z-10\">\n                    <div className=\"flex items-center space-x-2\">\n                      <svg className=\"w-4 h-4 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                      </svg>\n                      <span>Has notes - Click to view</span>\n                    </div>\n                    <div className=\"absolute -top-1 right-2 w-2 h-2 bg-gray-900 transform rotate-45\"></div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Article Title */}\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200 line-clamp-2\">\n            {truncateTitle(article.title)}\n          </h3>\n\n          {/* Preview Text */}\n          <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-3 leading-relaxed\">\n            {truncatePreview(article.content.detailed)}\n          </p>\n\n          {/* Footer with metadata */}\n          <div className=\"flex items-center justify-between text-sm text-gray-500 dark:text-gray-400\">\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"flex items-center\">\n                <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n                {format(article.date, 'MMM dd, yyyy')}\n              </span>\n              <span className=\"flex items-center\">\n                <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                {readTime} min read\n              </span>\n            </div>\n            <span className=\"text-xs font-medium text-gray-400 dark:text-gray-500\">\n              {article.source}\n            </span>\n          </div>\n\n          {/* Tags */}\n          <div className=\"mt-4 flex flex-wrap gap-1\">\n            {article.tags.slice(0, 3).map((tag) => (\n              <span\n                key={tag}\n                className=\"px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 text-xs rounded-md hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200\"\n              >\n                #{tag}\n              </span>\n            ))}\n            {article.tags.length > 3 && (\n              <span className=\"px-2 py-1 text-gray-400 dark:text-gray-500 text-xs\">\n                +{article.tags.length - 3} more\n              </span>\n            )}\n          </div>\n        </div>\n\n        {/* Hover indicator */}\n        <div className=\"h-1 bg-gradient-to-r from-blue-500 to-purple-500 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300\"></div>\n      </div>\n    </Link>\n  );\n};\n\nexport default ArticleCard; ","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport ArticleCard from '../components/ArticleCard/ArticleCard';\nimport { getArticlesByTopic, loadSampleArticles } from '../utils/sampleData';\n\nconst TopicsPage: React.FC = () => {\n  const { topic } = useParams<{ topic: string }>();\n\n  // Get articles based on topic parameter or show all articles\n  const topicArticles = topic \n    ? getArticlesByTopic(topic)\n    : loadSampleArticles();\n\n  const topicName = topic ? topic.charAt(0).toUpperCase() + topic.slice(1) : 'All Topics';\n\n  // Demo: Some articles have notes (for demonstration purposes)\n  const articlesWithNotes = ['1', '3', '7', '10', '15', '20']; // Article IDs that have notes\n\n  return (\n    <div className=\"max-w-7xl mx-auto\">\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            {topicName}\n          </h1>\n          <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n            {topicArticles.length} article{topicArticles.length !== 1 ? 's' : ''}\n          </span>\n        </div>\n        <p className=\"text-gray-600 dark:text-gray-400\">\n          Latest articles and analysis on {topicName.toLowerCase()}\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {topicArticles.map((article) => (\n          <ArticleCard \n            key={article.id} \n            article={article} \n            hasNotes={articlesWithNotes.includes(article.id)}\n          />\n        ))}\n      </div>\n\n      {topicArticles.length === 0 && (\n        <div className=\"text-center py-12\">\n          <p className=\"text-gray-600 dark:text-gray-400 text-lg\">\n            No articles found for this topic.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TopicsPage; "],"names":["_ref","article","hasNotes","StarRating","_ref2","rating","_jsxs","className","children","map","star","_jsx","concat","viewBox","d","readTime","text","words","split","length","Math","ceil","max","calculateReadTime","content","detailed","Link","to","id","topic","getSubTopicColor","subTopic","importance","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","title","maxLength","arguments","undefined","substring","truncateTitle","truncatePreview","format","date","source","tags","slice","tag","TopicsPage","useParams","topicArticles","getArticlesByTopic","loadSampleArticles","topicName","charAt","toUpperCase","articlesWithNotes","toLowerCase","ArticleCard","includes"],"sourceRoot":""}