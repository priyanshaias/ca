{"version":3,"file":"static/js/761.a8491a69.chunk.js","mappings":"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","sources":["components/ArticleCard/ArticleCard.tsx","components/UI/ArticleView.tsx","components/UI/NotesEditor.tsx","components/UI/ArticleDetailModal.tsx","pages/HomePage.tsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { NewsArticle } from '../../types';\n\ninterface ArticleCardProps {\n  article: NewsArticle;\n  hasNotes?: boolean;\n}\n\nconst ArticleCard: React.FC<ArticleCardProps> = ({ article, hasNotes = false }) => {\n  // Calculate read time (average reading speed: 200 words per minute)\n  const calculateReadTime = (text: string): number => {\n    const words = text.split(' ').length;\n    const readTime = Math.ceil(words / 200);\n    return Math.max(1, readTime); // Minimum 1 minute\n  };\n\n  // Get topic badge color\n  const getTopicColor = (topic: string) => {\n    const colors = {\n      'Economy': 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300 border-green-200 dark:border-green-700',\n      'Science & Tech': 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300 border-blue-200 dark:border-blue-700',\n      'National': 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300 border-red-200 dark:border-red-700',\n      'International': 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300 border-purple-200 dark:border-purple-700',\n      'Environment': 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/30 dark:text-emerald-300 border-emerald-200 dark:border-emerald-700',\n    };\n    return colors[topic as keyof typeof colors] || 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300 border-gray-200 dark:border-gray-700';\n  };\n\n  // Get sub-topic badge color (lighter version of topic color)\n  const getSubTopicColor = (topic: string) => {\n    const colors = {\n      'Economy': 'bg-green-50 text-green-700 dark:bg-green-900/20 dark:text-green-400 border-green-100 dark:border-green-600',\n      'Science & Tech': 'bg-blue-50 text-blue-700 dark:bg-blue-900/20 dark:text-blue-400 border-blue-100 dark:border-blue-600',\n      'National': 'bg-red-50 text-red-700 dark:bg-red-900/20 dark:text-red-400 border-red-100 dark:border-red-600',\n      'International': 'bg-purple-50 text-purple-700 dark:bg-purple-900/20 dark:text-purple-400 border-purple-100 dark:border-purple-600',\n      'Environment': 'bg-emerald-50 text-emerald-700 dark:bg-emerald-900/20 dark:text-emerald-400 border-emerald-100 dark:border-emerald-600',\n    };\n    return colors[topic as keyof typeof colors] || 'bg-gray-50 text-gray-700 dark:bg-gray-900/20 dark:text-gray-400 border-gray-100 dark:border-gray-600';\n  };\n\n  // Star rating component\n  const StarRating: React.FC<{ rating: number }> = ({ rating }) => {\n    return (\n      <div className=\"flex items-center space-x-1\">\n        {[1, 2, 3, 4, 5].map((star) => (\n          <svg\n            key={star}\n            className={`w-4 h-4 ${\n              star <= rating\n                ? 'text-yellow-400 fill-current'\n                : 'text-gray-300 dark:text-gray-600'\n            }`}\n            viewBox=\"0 0 20 20\"\n          >\n            <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n          </svg>\n        ))}\n        <span className=\"text-xs text-gray-500 dark:text-gray-400 ml-1\">\n          {rating}/5\n        </span>\n      </div>\n    );\n  };\n\n  // Truncate title if too long\n  const truncateTitle = (title: string, maxLength: number = 80) => {\n    if (title.length <= maxLength) return title;\n    return title.substring(0, maxLength) + '...';\n  };\n\n  // Truncate preview text\n  const truncatePreview = (text: string, maxLength: number = 100) => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n\n  const readTime = calculateReadTime(article.content.detailed);\n\n  return (\n    <Link to={`/article/${article.id}`}>\n      <div className=\"group bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-lg hover:border-blue-300 dark:hover:border-blue-600 transition-all duration-300 transform hover:-translate-y-1\">\n        <div className=\"p-6\">\n          {/* Header with topic badges and importance */}\n          <div className=\"flex items-start justify-between mb-4\">\n            <div className=\"flex flex-wrap gap-2\">\n              <span className={`px-3 py-1 text-xs font-medium rounded-full border ${getTopicColor(article.topic)}`}>\n                {article.topic}\n              </span>\n              <span className={`px-2 py-1 text-xs font-medium rounded-full border ${getSubTopicColor(article.topic)}`}>\n                {article.subTopic}\n              </span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <StarRating rating={article.importance} />\n              {hasNotes && (\n                <div className=\"relative group/notes\">\n                  <svg className=\"w-5 h-5 text-yellow-500 hover:text-yellow-600 transition-colors duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                  </svg>\n                  <div className=\"absolute -top-1 -right-1 w-2 h-2 bg-yellow-500 rounded-full\"></div>\n                  \n                  {/* Tooltip */}\n                  <div className=\"absolute right-0 top-8 w-48 bg-gray-900 text-white text-xs rounded-lg py-2 px-3 opacity-0 group-hover/notes:opacity-100 transition-opacity duration-200 pointer-events-none z-10\">\n                    <div className=\"flex items-center space-x-2\">\n                      <svg className=\"w-4 h-4 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                      </svg>\n                      <span>Has notes - Click to view</span>\n                    </div>\n                    <div className=\"absolute -top-1 right-2 w-2 h-2 bg-gray-900 transform rotate-45\"></div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Article Title */}\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200 line-clamp-2\">\n            {truncateTitle(article.title)}\n          </h3>\n\n          {/* Preview Text */}\n          <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-3 leading-relaxed\">\n            {truncatePreview(article.content.detailed)}\n          </p>\n\n          {/* Footer with metadata */}\n          <div className=\"flex items-center justify-between text-sm text-gray-500 dark:text-gray-400\">\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"flex items-center\">\n                <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n                {format(article.date, 'MMM dd, yyyy')}\n              </span>\n              <span className=\"flex items-center\">\n                <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                {readTime} min read\n              </span>\n            </div>\n            <span className=\"text-xs font-medium text-gray-400 dark:text-gray-500\">\n              {article.source}\n            </span>\n          </div>\n\n          {/* Tags */}\n          <div className=\"mt-4 flex flex-wrap gap-1\">\n            {article.tags.slice(0, 3).map((tag) => (\n              <span\n                key={tag}\n                className=\"px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 text-xs rounded-md hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200\"\n              >\n                #{tag}\n              </span>\n            ))}\n            {article.tags.length > 3 && (\n              <span className=\"px-2 py-1 text-gray-400 dark:text-gray-500 text-xs\">\n                +{article.tags.length - 3} more\n              </span>\n            )}\n          </div>\n        </div>\n\n        {/* Hover indicator */}\n        <div className=\"h-1 bg-gradient-to-r from-blue-500 to-purple-500 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300\"></div>\n      </div>\n    </Link>\n  );\n};\n\nexport default ArticleCard; ","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { NewsArticle } from '../../types';\nimport { useViewMode, ViewMode } from '../../contexts/ViewModeContext';\n\ninterface ArticleViewProps {\n  article: NewsArticle;\n  initialMode?: ViewMode;\n  className?: string;\n  onModeChange?: (mode: ViewMode) => void;\n}\n\ninterface ViewModeConfig {\n  key: ViewMode;\n  label: string;\n  icon: React.ReactNode;\n  shortcut: string;\n  contentKey: keyof NewsArticle['content'];\n}\n\nconst ArticleView: React.FC<ArticleViewProps> = ({\n  article,\n  initialMode = 'detailed',\n  className = '',\n  onModeChange\n}) => {\n  const { viewMode, setViewMode } = useViewMode();\n  const [currentMode, setCurrentMode] = useState<ViewMode>(viewMode);\n\n  // View mode configurations - wrapped in useMemo to prevent unnecessary re-renders\n  const viewModes: ViewModeConfig[] = useMemo(() => [\n    {\n      key: 'detailed',\n      label: 'Detailed',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n        </svg>\n      ),\n      shortcut: 'D',\n      contentKey: 'detailed'\n    },\n    {\n      key: 'prelims',\n      label: 'Prelims',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\" />\n        </svg>\n      ),\n      shortcut: 'P',\n      contentKey: 'prelims'\n    },\n    {\n      key: 'mains',\n      label: 'Mains',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n        </svg>\n      ),\n      shortcut: 'M',\n      contentKey: 'mains'\n    },\n    {\n      key: 'one-liner',\n      label: 'One Liners',\n      icon: (\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n        </svg>\n      ),\n      shortcut: 'O',\n      contentKey: 'oneLiner'\n    }\n  ], []);\n\n  // Get current content and word count\n  const currentContent = article.content[viewModes.find(mode => mode.key === currentMode)?.contentKey || 'detailed'];\n  const wordCount = currentContent.split(' ').length;\n\n  // Handle mode change\n  const handleModeChange = useCallback((mode: ViewMode) => {\n    setCurrentMode(mode);\n    setViewMode(mode);\n    onModeChange?.(mode);\n  }, [setViewMode, onModeChange]);\n\n  // Handle keyboard shortcuts\n  useEffect(() => {\n    const handleKeyPress = (event: KeyboardEvent) => {\n      // Only handle shortcuts when not typing in an input\n      if (event.target instanceof HTMLInputElement || event.target instanceof HTMLTextAreaElement) {\n        return;\n      }\n\n      const key = event.key.toUpperCase();\n      const mode = viewModes.find(m => m.shortcut === key);\n      \n      if (mode) {\n        event.preventDefault();\n        handleModeChange(mode.key);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleModeChange, viewModes]);\n\n  // Sync local state with global context\n  useEffect(() => {\n    setCurrentMode(viewMode);\n  }, [viewMode]);\n\n  // Format content based on mode\n  const formatContent = (content: string, mode: ViewMode) => {\n    switch (mode) {\n      case 'prelims':\n        return content.split('\\n').map((line, index) => (\n          <p key={index} className=\"mb-3 text-gray-700 dark:text-gray-300 leading-relaxed\">\n            {line.trim()}\n          </p>\n        ));\n      \n      case 'mains':\n        return content.split('\\n').map((line, index) => (\n          <div key={index} className=\"mb-4\">\n            <p className=\"text-gray-700 dark:text-gray-300 leading-relaxed\">\n              {line.trim()}\n            </p>\n          </div>\n        ));\n      \n      case 'one-liner':\n        return (\n          <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border-l-4 border-yellow-400 p-4 rounded-r-lg\">\n            <p className=\"text-gray-800 dark:text-gray-200 font-medium leading-relaxed\">\n              {content}\n            </p>\n          </div>\n        );\n      \n      default: // detailed\n        return content.split('\\n').map((paragraph, index) => (\n          <p key={index} className=\"mb-4 text-gray-700 dark:text-gray-300 leading-relaxed\">\n            {paragraph.trim()}\n          </p>\n        ));\n    }\n  };\n\n  return (\n    <div className={`bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 ${className}`}>\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            {article.title}\n          </h2>\n          <div className=\"flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400\">\n            <span>{article.topic}</span>\n            <span>•</span>\n            <span>{article.subTopic}</span>\n            <span>•</span>\n            <span>{new Date(article.date).toLocaleDateString()}</span>\n          </div>\n        </div>\n\n        {/* View Mode Toggle Buttons */}\n        <div className=\"flex flex-wrap gap-2\">\n          {viewModes.map((mode) => (\n            <button\n              key={mode.key}\n              onClick={() => handleModeChange(mode.key)}\n              className={`flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-all duration-200 ${\n                currentMode === mode.key\n                  ? 'bg-blue-600 text-white shadow-md'\n                  : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n              }`}\n              title={`${mode.label} (${mode.shortcut})`}\n            >\n              {mode.icon}\n              <span>{mode.label}</span>\n              <span className=\"text-xs opacity-75\">({mode.shortcut})</span>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Content Area */}\n      <div className=\"p-6\">\n        {/* Content Header */}\n        <div className=\"flex items-center justify-between mb-6 pb-4 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center space-x-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              {viewModes.find(mode => mode.key === currentMode)?.label} View\n            </h3>\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n              {wordCount} word{wordCount !== 1 ? 's' : ''}\n            </span>\n          </div>\n          \n          {/* Print Button */}\n          <button\n            onClick={() => window.print()}\n            className=\"flex items-center space-x-2 px-3 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 rounded-md hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200\"\n          >\n            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z\" />\n            </svg>\n            <span>Print</span>\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"prose prose-lg max-w-none dark:prose-invert\">\n          <div className=\"transition-all duration-300 ease-in-out\">\n            {formatContent(currentContent, currentMode)}\n          </div>\n        </div>\n\n        {/* Article Metadata */}\n        <div className=\"mt-8 pt-6 border-t border-gray-200 dark:border-gray-700\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n            <div>\n              <span className=\"font-medium text-gray-900 dark:text-white\">Source:</span>\n              <span className=\"ml-2 text-gray-600 dark:text-gray-400\">{article.source}</span>\n            </div>\n            <div>\n              <span className=\"font-medium text-gray-900 dark:text-white\">Importance:</span>\n              <span className=\"ml-2 text-gray-600 dark:text-gray-400\">\n                {Array.from({ length: article.importance }, (_, i) => (\n                  <span key={i} className=\"text-yellow-400\">★</span>\n                ))}\n                {Array.from({ length: 5 - article.importance }, (_, i) => (\n                  <span key={i} className=\"text-gray-300 dark:text-gray-600\">★</span>\n                ))}\n                <span className=\"ml-1\">({article.importance}/5)</span>\n              </span>\n            </div>\n            <div>\n              <span className=\"font-medium text-gray-900 dark:text-white\">Tags:</span>\n              <div className=\"flex flex-wrap gap-1 mt-1\">\n                {article.tags.map((tag, index) => (\n                  <span\n                    key={index}\n                    className=\"px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 rounded-full\"\n                  >\n                    #{tag}\n                  </span>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Keyboard Shortcuts Help */}\n      <div className=\"px-6 py-3 bg-gray-50 dark:bg-gray-700/50 border-t border-gray-200 dark:border-gray-700 rounded-b-lg\">\n        <div className=\"flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\n          <span>Use keyboard shortcuts: D, P, M, O</span>\n          <span>Current mode: {viewModes.find(mode => mode.key === currentMode)?.label}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ArticleView; ","import React, { useState, useEffect, useRef, useCallback } from 'react';\n\ninterface Note {\n  id: string;\n  content: string;\n  timestamp: Date;\n  lastEdited: Date;\n  characterCount: number;\n  version: number;\n}\n\ninterface NotesEditorProps {\n  articleId: string;\n  initialNotes?: Note[];\n  onNotesChange?: (notes: Note[]) => void;\n  className?: string;\n}\n\ninterface EditorState {\n  content: string;\n  selectionStart: number;\n  selectionEnd: number;\n}\n\nconst NotesEditor: React.FC<NotesEditorProps> = ({\n  articleId,\n  initialNotes = [],\n  onNotesChange,\n  className = ''\n}) => {\n  const [notes, setNotes] = useState<Note[]>(initialNotes);\n  const [currentNote, setCurrentNote] = useState<Note | null>(null);\n  const [autoSaveStatus, setAutoSaveStatus] = useState<'saved' | 'saving' | 'error'>('saved');\n  const [lastEditTime, setLastEditTime] = useState<Date | null>(null);\n  const [showFormatting, setShowFormatting] = useState(false);\n  const [fontSize, setFontSize] = useState(14);\n  const [textColor, setTextColor] = useState('#000000');\n\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const autoSaveTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const undoStackRef = useRef<EditorState[]>([]);\n  const redoStackRef = useRef<EditorState[]>([]);\n\n  // Load notes from localStorage on mount\n  useEffect(() => {\n    const savedNotes = localStorage.getItem(`article-notes-${articleId}`);\n    if (savedNotes) {\n      try {\n        const parsedNotes = JSON.parse(savedNotes);\n        setNotes(parsedNotes);\n        if (parsedNotes.length > 0) {\n          setCurrentNote(parsedNotes[0]);\n        }\n      } catch (error) {\n        console.error('Error loading notes:', error);\n      }\n    }\n  }, [articleId]);\n\n  // Save notes to localStorage\n  const saveNotes = useCallback(async () => {\n    try {\n      setAutoSaveStatus('saving');\n      localStorage.setItem(`article-notes-${articleId}`, JSON.stringify(notes));\n      setAutoSaveStatus('saved');\n      onNotesChange?.(notes);\n    } catch (error) {\n      console.error('Error saving notes:', error);\n      setAutoSaveStatus('error');\n    }\n  }, [notes, articleId, onNotesChange]);\n\n  // Auto-save effect\n  useEffect(() => {\n    if (autoSaveTimeoutRef.current) {\n      clearTimeout(autoSaveTimeoutRef.current);\n    }\n    \n    if (notes.length > 0) {\n      autoSaveTimeoutRef.current = setTimeout(() => {\n        saveNotes();\n      }, 30000); // 30 seconds\n    }\n\n    return () => {\n      if (autoSaveTimeoutRef.current) {\n        clearTimeout(autoSaveTimeoutRef.current);\n      }\n    };\n  }, [notes, saveNotes]);\n\n  // Create new note\n  const createNewNote = useCallback(() => {\n    const newNote: Note = {\n      id: Date.now().toString(),\n      content: '',\n      timestamp: new Date(),\n      lastEdited: new Date(),\n      characterCount: 0,\n      version: 1\n    };\n    \n    setNotes(prev => [newNote, ...prev]);\n    setCurrentNote(newNote);\n    setLastEditTime(new Date());\n  }, []);\n\n  // Update current note\n  const updateCurrentNote = useCallback((content: string) => {\n    if (!currentNote) return;\n\n    // Save current state to undo stack\n    if (textareaRef.current) {\n      const currentState: EditorState = {\n        content: currentNote.content,\n        selectionStart: textareaRef.current.selectionStart,\n        selectionEnd: textareaRef.current.selectionEnd\n      };\n      undoStackRef.current.push(currentState);\n      redoStackRef.current = []; // Clear redo stack on new edit\n    }\n\n    const updatedNote: Note = {\n      ...currentNote,\n      content,\n      lastEdited: new Date(),\n      characterCount: content.length,\n      version: currentNote.version + 1\n    };\n\n    setCurrentNote(updatedNote);\n    setNotes(prev => prev.map(note => \n      note.id === currentNote.id ? updatedNote : note\n    ));\n    setLastEditTime(new Date());\n  }, [currentNote]);\n\n  // Delete note\n  const deleteNote = useCallback((noteId: string) => {\n    setNotes(prev => prev.filter(note => note.id !== noteId));\n    if (currentNote?.id === noteId) {\n      setCurrentNote(notes.find(note => note.id !== noteId) || null);\n    }\n  }, [currentNote, notes]);\n\n  // Undo functionality\n  const undo = useCallback(() => {\n    if (undoStackRef.current.length === 0 || !textareaRef.current) return;\n\n    const previousState = undoStackRef.current.pop()!;\n    redoStackRef.current.push({\n      content: currentNote?.content || '',\n      selectionStart: textareaRef.current.selectionStart,\n      selectionEnd: textareaRef.current.selectionEnd\n    });\n\n    updateCurrentNote(previousState.content);\n    \n    // Restore cursor position\n    setTimeout(() => {\n      if (textareaRef.current) {\n        textareaRef.current.setSelectionRange(\n          previousState.selectionStart,\n          previousState.selectionEnd\n        );\n      }\n    }, 0);\n  }, [currentNote, updateCurrentNote]);\n\n  // Redo functionality\n  const redo = useCallback(() => {\n    if (redoStackRef.current.length === 0 || !textareaRef.current) return;\n\n    const nextState = redoStackRef.current.pop()!;\n    undoStackRef.current.push({\n      content: currentNote?.content || '',\n      selectionStart: textareaRef.current.selectionStart,\n      selectionEnd: textareaRef.current.selectionEnd\n    });\n\n    updateCurrentNote(nextState.content);\n    \n    // Restore cursor position\n    setTimeout(() => {\n      if (textareaRef.current) {\n        textareaRef.current.setSelectionRange(\n          nextState.selectionStart,\n          nextState.selectionEnd\n        );\n      }\n    }, 0);\n  }, [currentNote, updateCurrentNote]);\n\n  // Formatting functions\n  const applyFormatting = useCallback((format: string) => {\n    if (!textareaRef.current || !currentNote) return;\n\n    const textarea = textareaRef.current;\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const selectedText = textarea.value.substring(start, end);\n\n    let formattedText = '';\n    switch (format) {\n      case 'bold':\n        formattedText = `**${selectedText}**`;\n        break;\n      case 'italic':\n        formattedText = `*${selectedText}*`;\n        break;\n      case 'underline':\n        formattedText = `__${selectedText}__`;\n        break;\n      case 'bullet':\n        formattedText = `• ${selectedText}`;\n        break;\n      case 'number':\n        formattedText = `1. ${selectedText}`;\n        break;\n      case 'highlight':\n        formattedText = `==${selectedText}==`;\n        break;\n      default:\n        return;\n    }\n\n    const newContent = \n      textarea.value.substring(0, start) + \n      formattedText + \n      textarea.value.substring(end);\n\n    updateCurrentNote(newContent);\n    \n    // Restore cursor position\n    setTimeout(() => {\n      if (textareaRef.current) {\n        textareaRef.current.setSelectionRange(\n          start + formattedText.length,\n          start + formattedText.length\n        );\n      }\n    }, 0);\n  }, [currentNote, updateCurrentNote]);\n\n  // Export notes\n  const exportNotes = useCallback(() => {\n    const notesText = notes.map(note => \n      `Note ${note.id}\\n${note.content}\\n\\nLast edited: ${note.lastEdited.toLocaleString()}\\n---\\n`\n    ).join('\\n');\n    \n    const blob = new Blob([notesText], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `notes-${articleId}.txt`;\n    a.click();\n    URL.revokeObjectURL(url);\n  }, [notes, articleId]);\n\n  // Import notes\n  const importNotes = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const content = e.target?.result as string;\n      const newNote: Note = {\n        id: Date.now().toString(),\n        content,\n        timestamp: new Date(),\n        lastEdited: new Date(),\n        characterCount: content.length,\n        version: 1\n      };\n      \n      setNotes(prev => [newNote, ...prev]);\n      setCurrentNote(newNote);\n    };\n    reader.readAsText(file);\n  }, []);\n\n  // Manual save\n  const handleManualSave = useCallback(() => {\n    saveNotes();\n  }, [saveNotes]);\n\n  return (\n    <div className={`bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center space-x-3\">\n          <svg className=\"w-5 h-5 text-yellow-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n          </svg>\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Notes Editor</h3>\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          {/* Auto-save status */}\n          <div className=\"flex items-center space-x-1 text-xs\">\n            <div className={`w-2 h-2 rounded-full ${\n              autoSaveStatus === 'saved' ? 'bg-green-500' :\n              autoSaveStatus === 'saving' ? 'bg-yellow-500' : 'bg-red-500'\n            }`}></div>\n            <span className=\"text-gray-500 dark:text-gray-400\">\n              {autoSaveStatus === 'saved' ? 'Saved' :\n               autoSaveStatus === 'saving' ? 'Saving...' : 'Error'}\n            </span>\n          </div>\n          \n          {/* Manual save button */}\n          <button\n            onClick={handleManualSave}\n            className=\"px-3 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors duration-200\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n\n      {/* Notes List */}\n      <div className=\"p-4 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">Notes ({notes.length})</h4>\n          <button\n            onClick={createNewNote}\n            className=\"px-3 py-1 text-xs bg-green-600 text-white rounded hover:bg-green-700 transition-colors duration-200\"\n          >\n            + New Note\n          </button>\n        </div>\n        \n        <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n          {notes.map((note) => (\n            <div\n              key={note.id}\n              className={`flex items-center justify-between p-2 rounded cursor-pointer transition-colors duration-200 ${\n                currentNote?.id === note.id\n                  ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300'\n                  : 'hover:bg-gray-100 dark:hover:bg-gray-700'\n              }`}\n              onClick={() => {\n                setCurrentNote(note);\n              }}\n            >\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"text-sm font-medium truncate\">\n                  {note.content.substring(0, 50) || 'Empty note'}...\n                </div>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400\">\n                  {note.lastEdited.toLocaleString()}\n                </div>\n              </div>\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  deleteNote(note.id);\n                }}\n                className=\"ml-2 p-1 text-gray-400 hover:text-red-500 transition-colors duration-200\"\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\n                </svg>\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Editor */}\n      {currentNote && (\n        <div className=\"p-4\">\n          {/* Formatting Toolbar */}\n          <div className=\"mb-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={() => setShowFormatting(!showFormatting)}\n                  className=\"px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200\"\n                >\n                  {showFormatting ? 'Hide' : 'Show'} Formatting\n                </button>\n                \n                {/* Undo/Redo */}\n                <button\n                  onClick={undo}\n                  disabled={undoStackRef.current.length === 0}\n                  className=\"px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  Undo\n                </button>\n                <button\n                  onClick={redo}\n                  disabled={redoStackRef.current.length === 0}\n                  className=\"px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  Redo\n                </button>\n              </div>\n              \n              {/* Export/Import */}\n              <div className=\"flex items-center space-x-2\">\n                <button\n                  onClick={exportNotes}\n                  className=\"px-2 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors duration-200\"\n                >\n                  Export\n                </button>\n                <label className=\"px-2 py-1 text-xs bg-green-600 text-white rounded hover:bg-green-700 transition-colors duration-200 cursor-pointer\">\n                  Import\n                  <input\n                    type=\"file\"\n                    accept=\".txt,.md\"\n                    onChange={importNotes}\n                    className=\"hidden\"\n                  />\n                </label>\n              </div>\n            </div>\n            \n            {/* Formatting Options */}\n            {showFormatting && (\n              <div className=\"flex items-center space-x-2 p-2 bg-gray-50 dark:bg-gray-700 rounded\">\n                <button\n                  onClick={() => applyFormatting('bold')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200 font-bold\"\n                >\n                  B\n                </button>\n                <button\n                  onClick={() => applyFormatting('italic')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200 italic\"\n                >\n                  I\n                </button>\n                <button\n                  onClick={() => applyFormatting('underline')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200 underline\"\n                >\n                  U\n                </button>\n                <button\n                  onClick={() => applyFormatting('bullet')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200\"\n                >\n                  •\n                </button>\n                <button\n                  onClick={() => applyFormatting('number')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200\"\n                >\n                  1.\n                </button>\n                <button\n                  onClick={() => applyFormatting('highlight')}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors duration-200\"\n                >\n                  Highlight\n                </button>\n                \n                {/* Font Size */}\n                <select\n                  value={fontSize}\n                  onChange={(e) => setFontSize(Number(e.target.value))}\n                  className=\"px-2 py-1 text-xs bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded border-0\"\n                >\n                  <option value={12}>12px</option>\n                  <option value={14}>14px</option>\n                  <option value={16}>16px</option>\n                  <option value={18}>18px</option>\n                  <option value={20}>20px</option>\n                </select>\n                \n                {/* Text Color */}\n                <input\n                  type=\"color\"\n                  value={textColor}\n                  onChange={(e) => setTextColor(e.target.value)}\n                  className=\"w-8 h-6 rounded border-0 cursor-pointer\"\n                />\n              </div>\n            )}\n          </div>\n\n          {/* Text Editor */}\n          <div className=\"mb-4\">\n            <textarea\n              ref={textareaRef}\n              value={currentNote.content}\n              onChange={(e) => updateCurrentNote(e.target.value)}\n              placeholder=\"Start typing your notes here...\"\n              className=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 resize-none\"\n              rows={8}\n              style={{\n                fontSize: `${fontSize}px`,\n                color: textColor\n              }}\n            />\n          </div>\n\n          {/* Editor Stats */}\n          <div className=\"flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\n            <div className=\"flex items-center space-x-4\">\n              <span>Characters: {currentNote.characterCount}</span>\n              <span>Words: {currentNote.content.split(/\\s+/).filter(word => word.length > 0).length}</span>\n              <span>Version: {currentNote.version}</span>\n            </div>\n            <div>\n              {lastEditTime && (\n                <span>Last edited: {lastEditTime.toLocaleTimeString()}</span>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Empty State */}\n      {!currentNote && notes.length === 0 && (\n        <div className=\"p-8 text-center\">\n          <svg className=\"w-12 h-12 text-gray-300 dark:text-gray-600 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n          </svg>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">No notes yet</p>\n          <button\n            onClick={createNewNote}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\"\n          >\n            Create Your First Note\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NotesEditor; ","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { NewsArticle } from '../../types';\nimport ArticleView from './ArticleView';\nimport { ViewMode } from '../../contexts/ViewModeContext';\nimport NotesEditor from './NotesEditor';\n\ninterface ArticleDetailModalProps {\n  article: NewsArticle;\n  isOpen: boolean;\n  onClose: () => void;\n  onNavigate?: (direction: 'prev' | 'next') => void;\n  hasPrevious?: boolean;\n  hasNext?: boolean;\n  className?: string;\n}\n\ninterface Note {\n  id: string;\n  content: string;\n  timestamp: Date;\n  lastEdited: Date;\n  characterCount: number;\n  version: number;\n}\n\nconst ArticleDetailModal: React.FC<ArticleDetailModalProps> = ({\n  article,\n  isOpen,\n  onClose,\n  onNavigate,\n  hasPrevious = false,\n  hasNext = false,\n  className = ''\n}) => {\n  const [currentViewMode, setCurrentViewMode] = useState<ViewMode>('detailed');\n  const [showNotes, setShowNotes] = useState(false);\n  const [notes, setNotes] = useState<Note[]>([]);\n  const modalRef = useRef<HTMLDivElement>(null);\n\n  // Load notes from localStorage\n  useEffect(() => {\n    try {\n      const savedNotes = localStorage.getItem(`article-notes-${article.id}`);\n      if (savedNotes) {\n        const parsedNotes = JSON.parse(savedNotes);\n        setNotes(parsedNotes);\n      }\n    } catch (error) {\n      console.error('Error loading notes:', error);\n    }\n  }, [article.id]);\n\n  // Save notes to localStorage\n  useEffect(() => {\n    try {\n      localStorage.setItem(`article-notes-${article.id}`, JSON.stringify(notes));\n    } catch (error) {\n      console.error('Error saving notes:', error);\n    }\n  }, [notes, article.id]);\n\n  // Handle ESC key\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden'; // Prevent background scroll\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'unset';\n    };\n  }, [isOpen, onClose]);\n\n  // Handle click outside modal\n  const handleBackdropClick = useCallback((event: React.MouseEvent) => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  }, [onClose]);\n\n  // Handle view mode change\n  const handleViewModeChange = useCallback((mode: ViewMode) => {\n    setCurrentViewMode(mode);\n  }, []);\n\n\n\n  // Copy article link\n  const handleCopyLink = useCallback(async () => {\n    const url = `${window.location.origin}/article/${article.id}`;\n    try {\n      await navigator.clipboard.writeText(url);\n      // You could add a toast notification here\n    } catch (error) {\n      console.error('Failed to copy link:', error);\n    }\n  }, [article.id]);\n\n  // Print article\n  const handlePrint = useCallback(() => {\n    window.print();\n  }, []);\n\n  // Navigate to previous/next article\n  const handleNavigate = useCallback((direction: 'prev' | 'next') => {\n    onNavigate?.(direction);\n  }, [onNavigate]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black bg-opacity-50 backdrop-blur-sm\"\n      onClick={handleBackdropClick}\n    >\n      {/* Modal Container */}\n      <div\n        ref={modalRef}\n        className={`relative w-full max-w-7xl h-full max-h-[90vh] bg-white dark:bg-gray-800 rounded-lg shadow-2xl flex flex-col ${className}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center space-x-4\">\n            <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\n              Article Detail\n            </h2>\n            <div className=\"flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400\">\n              <span>{article.topic}</span>\n              <span>•</span>\n              <span>{article.subTopic}</span>\n            </div>\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            {/* Notes Toggle */}\n            <button\n              onClick={() => setShowNotes(!showNotes)}\n              className={`p-2 rounded-lg transition-colors duration-200 ${\n                showNotes\n                  ? 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-700 dark:text-yellow-300'\n                  : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\n              }`}\n              title=\"Toggle Notes\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n              </svg>\n            </button>\n\n            {/* Share Button */}\n            <button\n              onClick={handleCopyLink}\n              className=\"p-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200\"\n              title=\"Copy Link\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z\" />\n              </svg>\n            </button>\n\n            {/* Print Button */}\n            <button\n              onClick={handlePrint}\n              className=\"p-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200\"\n              title=\"Print Article\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z\" />\n              </svg>\n            </button>\n\n            {/* Close Button */}\n            <button\n              onClick={onClose}\n              className=\"p-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200\"\n              title=\"Close Modal\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Content Area */}\n        <div className=\"flex-1 flex overflow-hidden\">\n          {/* Main Content */}\n          <div className={`flex-1 flex flex-col ${showNotes ? 'lg:w-2/3' : 'w-full'}`}>\n            {/* Navigation */}\n            <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\">\n              <button\n                onClick={() => handleNavigate('prev')}\n                disabled={!hasPrevious}\n                className={`flex items-center space-x-2 px-3 py-2 rounded-lg transition-colors duration-200 ${\n                  hasPrevious\n                    ? 'text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600'\n                    : 'text-gray-400 dark:text-gray-600 bg-gray-50 dark:bg-gray-800 cursor-not-allowed'\n                }`}\n              >\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n                </svg>\n                <span>Previous</span>\n              </button>\n\n              <div className=\"flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400\">\n                <span>{new Date(article.date).toLocaleDateString()}</span>\n                <span>•</span>\n                <span>{article.source}</span>\n                <span>•</span>\n                <span>Importance: {article.importance}/5</span>\n              </div>\n\n              <button\n                onClick={() => handleNavigate('next')}\n                disabled={!hasNext}\n                className={`flex items-center space-x-2 px-3 py-2 rounded-lg transition-colors duration-200 ${\n                  hasNext\n                    ? 'text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600'\n                    : 'text-gray-400 dark:text-gray-600 bg-gray-50 dark:bg-gray-800 cursor-not-allowed'\n                }`}\n              >\n                <span>Next</span>\n                <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                </svg>\n              </button>\n            </div>\n\n            {/* Article Content */}\n            <div className=\"flex-1 overflow-y-auto\">\n              <ArticleView\n                article={article}\n                initialMode={currentViewMode}\n                onModeChange={handleViewModeChange}\n                className=\"border-0 shadow-none\"\n              />\n            </div>\n          </div>\n\n          {/* Notes Panel */}\n          {showNotes && (\n            <div className=\"lg:w-1/3 border-l border-gray-200 dark:border-gray-700\">\n              <NotesEditor\n                articleId={article.id}\n                initialNotes={notes}\n                onNotesChange={setNotes}\n                className=\"h-full\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ArticleDetailModal; ","import React, { useState, useMemo } from 'react';\nimport ArticleCard from '../components/ArticleCard/ArticleCard';\nimport ArticleDetailModal from '../components/UI/ArticleDetailModal';\nimport { useNews } from '../contexts/NewsContext';\n\nconst HomePage: React.FC = () => {\n  const [selectedArticleIndex, setSelectedArticleIndex] = useState<number | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [showFilteredResults, setShowFilteredResults] = useState(false);\n\n  const { filteredArticles } = useNews();\n\n  // Get articles with notes for display\n  const articlesWithNotes = useMemo(() => {\n    return filteredArticles.filter(article => {\n      const savedNotes = localStorage.getItem(`article-notes-${article.id}`);\n      return savedNotes && JSON.parse(savedNotes).length > 0;\n    }).map(article => article.id);\n  }, [filteredArticles]);\n\n  const selectedArticle = selectedArticleIndex !== null ? filteredArticles[selectedArticleIndex] : null;\n\n  const handleArticleClick = (index: number) => {\n    setSelectedArticleIndex(index);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedArticleIndex(null);\n  };\n\n  const handleNavigate = (direction: 'prev' | 'next') => {\n    if (selectedArticleIndex === null) return;\n\n    if (direction === 'prev' && selectedArticleIndex > 0) {\n      setSelectedArticleIndex(selectedArticleIndex - 1);\n    } else if (direction === 'next' && selectedArticleIndex < filteredArticles.length - 1) {\n      setSelectedArticleIndex(selectedArticleIndex + 1);\n    }\n  };\n\n  const hasPrevious = selectedArticleIndex !== null && selectedArticleIndex > 0;\n  const hasNext = selectedArticleIndex !== null && selectedArticleIndex < filteredArticles.length - 1;\n\n  return (\n    <div className=\"max-w-7xl mx-auto\">\n      {/* Header with Filter Toggle */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n              Current Affairs\n            </h1>\n            <p className=\"text-gray-600 dark:text-gray-400\">\n              Stay updated with the latest news and analysis\n            </p>\n          </div>\n          <button\n            onClick={() => setShowFilteredResults(!showFilteredResults)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200\"\n          >\n            {showFilteredResults ? 'Show All Articles' : 'Show Filtered Results'}\n          </button>\n        </div>\n      </div>\n\n      {/* Filtered Results Section */}\n      {showFilteredResults && (\n        <section className=\"mb-12\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\n              Filtered Results\n            </h2>\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n              Use the sidebar filters to narrow down results\n            </span>\n          </div>\n          <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6 border border-blue-200 dark:border-blue-700\">\n            <div className=\"text-center\">\n              <svg className=\"w-16 h-16 text-blue-300 dark:text-blue-600 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.207A1 1 0 013 6.5V4z\" />\n              </svg>\n              <h3 className=\"text-lg font-medium text-blue-900 dark:text-blue-100 mb-2\">\n                Use Sidebar Filters\n              </h3>\n              <p className=\"text-blue-700 dark:text-blue-300\">\n                The filtered results will appear here based on your sidebar filter selections.\n              </p>\n            </div>\n          </div>\n        </section>\n      )}\n\n      {/* Featured Articles Section */}\n      {!showFilteredResults && (\n        <section className=\"mb-12\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\n              Featured Articles\n            </h2>\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n              {filteredArticles.slice(0, 6).length} article{filteredArticles.slice(0, 6).length !== 1 ? 's' : ''}\n            </span>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {filteredArticles.slice(0, 6).map((article, index) => (\n              <div\n                key={article.id}\n                onClick={() => handleArticleClick(index)}\n                className=\"cursor-pointer transform transition-transform duration-200 hover:scale-105\"\n              >\n                <ArticleCard \n                  article={article} \n                  hasNotes={articlesWithNotes.includes(article.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </section>\n      )}\n\n      {/* Latest News Section */}\n      {!showFilteredResults && (\n        <section className=\"mb-12\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\n              Latest News\n            </h2>\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n              {filteredArticles.slice(6, 12).length} article{filteredArticles.slice(6, 12).length !== 1 ? 's' : ''}\n            </span>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {filteredArticles.slice(6, 12).map((article, index) => (\n              <div\n                key={article.id}\n                onClick={() => handleArticleClick(index + 6)}\n                className=\"cursor-pointer transform transition-transform duration-200 hover:scale-105\"\n              >\n                <ArticleCard \n                  article={article} \n                  hasNotes={articlesWithNotes.includes(article.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </section>\n      )}\n\n      {/* All Articles Section */}\n      {!showFilteredResults && (\n        <section className=\"mb-12\">\n          <div className=\"flex items-center justify-between mb-6\">\n            <h2 className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\n              All Articles\n            </h2>\n            <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n              {filteredArticles.length} article{filteredArticles.length !== 1 ? 's' : ''}\n            </span>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {filteredArticles.map((article, index) => (\n              <div\n                key={article.id}\n                onClick={() => handleArticleClick(index)}\n                className=\"cursor-pointer transform transition-transform duration-200 hover:scale-105\"\n              >\n                <ArticleCard \n                  article={article} \n                  hasNotes={articlesWithNotes.includes(article.id)}\n                />\n              </div>\n            ))}\n          </div>\n        </section>\n      )}\n\n      {/* Modal */}\n      {selectedArticle && (\n        <ArticleDetailModal\n          article={selectedArticle}\n          isOpen={isModalOpen}\n          onClose={handleCloseModal}\n          onNavigate={handleNavigate}\n          hasPrevious={hasPrevious}\n          hasNext={hasNext}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default HomePage; "],"names":["_ref","article","hasNotes","StarRating","_ref2","rating","_jsxs","className","children","map","star","_jsx","concat","viewBox","d","readTime","text","words","split","length","Math","ceil","max","calculateReadTime","content","detailed","Link","to","id","topic","getSubTopicColor","subTopic","importance","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","title","maxLength","arguments","undefined","substring","truncateTitle","truncatePreview","format","date","source","tags","slice","tag","_viewModes$find","_viewModes$find2","_viewModes$find3","initialMode","onModeChange","viewMode","setViewMode","useViewMode","currentMode","setCurrentMode","useState","viewModes","useMemo","key","label","icon","shortcut","contentKey","currentContent","find","mode","wordCount","handleModeChange","useCallback","useEffect","handleKeyPress","event","target","HTMLInputElement","HTMLTextAreaElement","toUpperCase","m","preventDefault","window","addEventListener","removeEventListener","Date","toLocaleDateString","onClick","print","formatContent","line","index","trim","paragraph","Array","from","_","i","articleId","initialNotes","onNotesChange","notes","setNotes","currentNote","setCurrentNote","autoSaveStatus","setAutoSaveStatus","lastEditTime","setLastEditTime","showFormatting","setShowFormatting","fontSize","setFontSize","textColor","setTextColor","textareaRef","useRef","autoSaveTimeoutRef","undoStackRef","redoStackRef","savedNotes","localStorage","getItem","parsedNotes","JSON","parse","error","console","saveNotes","async","setItem","stringify","current","clearTimeout","setTimeout","createNewNote","newNote","now","toString","timestamp","lastEdited","characterCount","version","prev","updateCurrentNote","currentState","selectionStart","selectionEnd","push","updatedNote","_objectSpread","note","deleteNote","noteId","filter","undo","previousState","pop","setSelectionRange","redo","nextState","applyFormatting","textarea","start","end","selectedText","value","formattedText","newContent","exportNotes","notesText","toLocaleString","join","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","importNotes","_event$target$files","file","files","reader","FileReader","onload","e","_e$target","result","readAsText","handleManualSave","stopPropagation","disabled","accept","onChange","Number","ref","placeholder","rows","style","color","word","toLocaleTimeString","isOpen","onClose","onNavigate","hasPrevious","hasNext","currentViewMode","setCurrentViewMode","showNotes","setShowNotes","modalRef","handleEscape","body","overflow","handleBackdropClick","currentTarget","handleViewModeChange","handleCopyLink","location","origin","navigator","clipboard","writeText","handlePrint","handleNavigate","direction","ArticleView","NotesEditor","HomePage","selectedArticleIndex","setSelectedArticleIndex","isModalOpen","setIsModalOpen","showFilteredResults","setShowFilteredResults","filteredArticles","useNews","articlesWithNotes","selectedArticle","handleArticleClick","ArticleCard","includes","ArticleDetailModal","handleCloseModal"],"sourceRoot":""}