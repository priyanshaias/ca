{"version":3,"file":"static/js/946.012a00b3.chunk.js","mappings":"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","sources":["components/ArticleCard/ArticleCard.tsx","pages/SearchPage.tsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport { NewsArticle } from '../../types';\n\ninterface ArticleCardProps {\n  article: NewsArticle;\n  hasNotes?: boolean;\n}\n\nconst ArticleCard: React.FC<ArticleCardProps> = ({ article, hasNotes = false }) => {\n  // Calculate read time (average reading speed: 200 words per minute)\n  const calculateReadTime = (text: string): number => {\n    const words = text.split(' ').length;\n    const readTime = Math.ceil(words / 200);\n    return Math.max(1, readTime); // Minimum 1 minute\n  };\n\n  // Get topic badge color\n  const getTopicColor = (topic: string) => {\n    const colors = {\n      'Economy': 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300 border-green-200 dark:border-green-700',\n      'Science & Tech': 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300 border-blue-200 dark:border-blue-700',\n      'National': 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300 border-red-200 dark:border-red-700',\n      'International': 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300 border-purple-200 dark:border-purple-700',\n      'Environment': 'bg-emerald-100 text-emerald-800 dark:bg-emerald-900/30 dark:text-emerald-300 border-emerald-200 dark:border-emerald-700',\n    };\n    return colors[topic as keyof typeof colors] || 'bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300 border-gray-200 dark:border-gray-700';\n  };\n\n  // Get sub-topic badge color (lighter version of topic color)\n  const getSubTopicColor = (topic: string) => {\n    const colors = {\n      'Economy': 'bg-green-50 text-green-700 dark:bg-green-900/20 dark:text-green-400 border-green-100 dark:border-green-600',\n      'Science & Tech': 'bg-blue-50 text-blue-700 dark:bg-blue-900/20 dark:text-blue-400 border-blue-100 dark:border-blue-600',\n      'National': 'bg-red-50 text-red-700 dark:bg-red-900/20 dark:text-red-400 border-red-100 dark:border-red-600',\n      'International': 'bg-purple-50 text-purple-700 dark:bg-purple-900/20 dark:text-purple-400 border-purple-100 dark:border-purple-600',\n      'Environment': 'bg-emerald-50 text-emerald-700 dark:bg-emerald-900/20 dark:text-emerald-400 border-emerald-100 dark:border-emerald-600',\n    };\n    return colors[topic as keyof typeof colors] || 'bg-gray-50 text-gray-700 dark:bg-gray-900/20 dark:text-gray-400 border-gray-100 dark:border-gray-600';\n  };\n\n  // Star rating component\n  const StarRating: React.FC<{ rating: number }> = ({ rating }) => {\n    return (\n      <div className=\"flex items-center space-x-1\">\n        {[1, 2, 3, 4, 5].map((star) => (\n          <svg\n            key={star}\n            className={`w-4 h-4 ${\n              star <= rating\n                ? 'text-yellow-400 fill-current'\n                : 'text-gray-300 dark:text-gray-600'\n            }`}\n            viewBox=\"0 0 20 20\"\n          >\n            <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n          </svg>\n        ))}\n        <span className=\"text-xs text-gray-500 dark:text-gray-400 ml-1\">\n          {rating}/5\n        </span>\n      </div>\n    );\n  };\n\n  // Truncate title if too long\n  const truncateTitle = (title: string, maxLength: number = 80) => {\n    if (title.length <= maxLength) return title;\n    return title.substring(0, maxLength) + '...';\n  };\n\n  // Truncate preview text\n  const truncatePreview = (text: string, maxLength: number = 100) => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n\n  const readTime = calculateReadTime(article.content.detailed);\n\n  return (\n    <Link to={`/article/${article.id}`}>\n      <div className=\"group bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-lg hover:border-blue-300 dark:hover:border-blue-600 transition-all duration-300 transform hover:-translate-y-1\">\n        <div className=\"p-6\">\n          {/* Header with topic badges and importance */}\n          <div className=\"flex items-start justify-between mb-4\">\n            <div className=\"flex flex-wrap gap-2\">\n              <span className={`px-3 py-1 text-xs font-medium rounded-full border ${getTopicColor(article.topic)}`}>\n                {article.topic}\n              </span>\n              <span className={`px-2 py-1 text-xs font-medium rounded-full border ${getSubTopicColor(article.topic)}`}>\n                {article.subTopic}\n              </span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <StarRating rating={article.importance} />\n              {hasNotes && (\n                <div className=\"relative group/notes\">\n                  <svg className=\"w-5 h-5 text-yellow-500 hover:text-yellow-600 transition-colors duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                  </svg>\n                  <div className=\"absolute -top-1 -right-1 w-2 h-2 bg-yellow-500 rounded-full\"></div>\n                  \n                  {/* Tooltip */}\n                  <div className=\"absolute right-0 top-8 w-48 bg-gray-900 text-white text-xs rounded-lg py-2 px-3 opacity-0 group-hover/notes:opacity-100 transition-opacity duration-200 pointer-events-none z-10\">\n                    <div className=\"flex items-center space-x-2\">\n                      <svg className=\"w-4 h-4 text-yellow-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\n                      </svg>\n                      <span>Has notes - Click to view</span>\n                    </div>\n                    <div className=\"absolute -top-1 right-2 w-2 h-2 bg-gray-900 transform rotate-45\"></div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Article Title */}\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors duration-200 line-clamp-2\">\n            {truncateTitle(article.title)}\n          </h3>\n\n          {/* Preview Text */}\n          <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4 line-clamp-3 leading-relaxed\">\n            {truncatePreview(article.content.detailed)}\n          </p>\n\n          {/* Footer with metadata */}\n          <div className=\"flex items-center justify-between text-sm text-gray-500 dark:text-gray-400\">\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"flex items-center\">\n                <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\" />\n                </svg>\n                {format(article.date, 'MMM dd, yyyy')}\n              </span>\n              <span className=\"flex items-center\">\n                <svg className=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n                {readTime} min read\n              </span>\n            </div>\n            <span className=\"text-xs font-medium text-gray-400 dark:text-gray-500\">\n              {article.source}\n            </span>\n          </div>\n\n          {/* Tags */}\n          <div className=\"mt-4 flex flex-wrap gap-1\">\n            {article.tags.slice(0, 3).map((tag) => (\n              <span\n                key={tag}\n                className=\"px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 text-xs rounded-md hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200\"\n              >\n                #{tag}\n              </span>\n            ))}\n            {article.tags.length > 3 && (\n              <span className=\"px-2 py-1 text-gray-400 dark:text-gray-500 text-xs\">\n                +{article.tags.length - 3} more\n              </span>\n            )}\n          </div>\n        </div>\n\n        {/* Hover indicator */}\n        <div className=\"h-1 bg-gradient-to-r from-blue-500 to-purple-500 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300\"></div>\n      </div>\n    </Link>\n  );\n};\n\nexport default ArticleCard; ","import React, { useState, useMemo } from 'react';\nimport ArticleCard from '../components/ArticleCard/ArticleCard';\nimport DateFilter from '../components/UI/DateFilter';\nimport { ArticleFilters, DateRange } from '../types';\nimport { loadSampleArticles } from '../utils/sampleData';\n\nconst SearchPage: React.FC = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filters, setFilters] = useState<ArticleFilters>({});\n  const [dateRange, setDateRange] = useState<DateRange | null>(null);\n\n  // Get all articles from sample data\n  const allArticles = loadSampleArticles();\n\n  // Demo: Some articles have notes (for demonstration purposes)\n  const articlesWithNotes = ['1', '3', '7', '10', '15', '20', '25', '28']; // Article IDs that have notes\n\n  // Filter articles based on search query and filters\n  const searchResults = useMemo(() => {\n    let filtered = [...allArticles];\n\n    // Apply search query\n    if (searchQuery) {\n      const query = searchQuery.toLowerCase();\n      filtered = filtered.filter(article =>\n        article.title.toLowerCase().includes(query) ||\n        article.content.oneLiner.toLowerCase().includes(query) ||\n        article.tags.some(tag => tag.toLowerCase().includes(query))\n      );\n    }\n\n    // Apply filters\n    if (filters.topic) {\n      filtered = filtered.filter(article => article.topic === filters.topic);\n    }\n\n    if (filters.importance) {\n      filtered = filtered.filter(article => article.importance === filters.importance);\n    }\n\n    // Apply date range filter\n    if (dateRange) {\n      filtered = filtered.filter(article => \n        article.date >= dateRange.start && article.date <= dateRange.end\n      );\n    }\n\n    return filtered;\n  }, [allArticles, searchQuery, filters, dateRange]);\n\n  const handleSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Search is handled by the useMemo above\n  };\n\n  const clearFilters = () => {\n    setSearchQuery('');\n    setFilters({});\n    setDateRange(null);\n  };\n\n  const handleDateRangeChange = (range: DateRange | null) => {\n    setDateRange(range);\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n          Search Articles\n        </h1>\n        <p className=\"text-gray-600 dark:text-gray-400\">\n          Find articles by keywords, topics, or filters\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n        {/* Search Filters */}\n        <div className=\"lg:col-span-1 space-y-6\">\n          {/* Basic Filters */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n              Filters\n            </h2>\n            \n            <form onSubmit={handleSearch} className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Search Query\n                </label>\n                <input\n                  type=\"text\"\n                  value={searchQuery}\n                  onChange={(e) => setSearchQuery(e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Enter keywords...\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Topic\n                </label>\n                <select\n                  value={filters.topic || ''}\n                  onChange={(e) => setFilters({ ...filters, topic: e.target.value })}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"\">All Topics</option>\n                  <option value=\"Economy\">Economy</option>\n                  <option value=\"Science & Tech\">Science & Tech</option>\n                  <option value=\"National\">National</option>\n                  <option value=\"International\">International</option>\n                  <option value=\"Environment\">Environment</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                  Importance Level\n                </label>\n                <select\n                  value={filters.importance || ''}\n                  onChange={(e) => setFilters({ ...filters, importance: Number(e.target.value) })}\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                >\n                  <option value=\"\">All Levels</option>\n                  <option value=\"5\">Level 5 (Critical)</option>\n                  <option value=\"4\">Level 4 (High)</option>\n                  <option value=\"3\">Level 3 (Medium)</option>\n                  <option value=\"2\">Level 2 (Low)</option>\n                  <option value=\"1\">Level 1 (Minimal)</option>\n                </select>\n              </div>\n\n              <div className=\"flex space-x-2\">\n                <button\n                  type=\"submit\"\n                  className=\"flex-1 bg-blue-600 dark:bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-700 dark:hover:bg-blue-600 transition-colors duration-200\"\n                >\n                  Search\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={clearFilters}\n                  className=\"px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors duration-200\"\n                >\n                  Clear\n                </button>\n              </div>\n            </form>\n          </div>\n\n          {/* Date Filter */}\n          <DateFilter onDateRangeChange={handleDateRangeChange} />\n        </div>\n\n        {/* Search Results */}\n        <div className=\"lg:col-span-3\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                Search Results\n              </h2>\n              <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                {searchResults.length} article{searchResults.length !== 1 ? 's' : ''} found\n              </span>\n            </div>\n            \n            {searchResults.length > 0 ? (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {searchResults.map((article) => (\n                  <ArticleCard \n                    key={article.id} \n                    article={article} \n                    hasNotes={articlesWithNotes.includes(article.id)}\n                  />\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-12\">\n                <p className=\"text-gray-600 dark:text-gray-400 text-lg\">\n                  No articles found. Try adjusting your search criteria.\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPage; "],"names":["_ref","article","hasNotes","StarRating","_ref2","rating","_jsxs","className","children","map","star","_jsx","concat","viewBox","d","readTime","text","words","split","length","Math","ceil","max","calculateReadTime","content","detailed","Link","to","id","topic","getSubTopicColor","subTopic","importance","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","title","maxLength","arguments","undefined","substring","truncateTitle","truncatePreview","format","date","source","tags","slice","tag","SearchPage","searchQuery","setSearchQuery","useState","filters","setFilters","dateRange","setDateRange","allArticles","loadSampleArticles","articlesWithNotes","searchResults","useMemo","filtered","query","toLowerCase","filter","includes","oneLiner","some","start","end","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","_objectSpread","Number","onClick","clearFilters","DateFilter","onDateRangeChange","range","ArticleCard"],"sourceRoot":""}